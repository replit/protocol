// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: api.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileAuthMethod int32

const (
	FileAuthMethod_GET    FileAuthMethod = 0
	FileAuthMethod_HEAD   FileAuthMethod = 1
	FileAuthMethod_PUT    FileAuthMethod = 2
	FileAuthMethod_DELETE FileAuthMethod = 3
)

// Enum value maps for FileAuthMethod.
var (
	FileAuthMethod_name = map[int32]string{
		0: "GET",
		1: "HEAD",
		2: "PUT",
		3: "DELETE",
	}
	FileAuthMethod_value = map[string]int32{
		"GET":    0,
		"HEAD":   1,
		"PUT":    2,
		"DELETE": 3,
	}
)

func (x FileAuthMethod) Enum() *FileAuthMethod {
	p := new(FileAuthMethod)
	*p = x
	return p
}

func (x FileAuthMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileAuthMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[0].Descriptor()
}

func (FileAuthMethod) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[0]
}

func (x FileAuthMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileAuthMethod.Descriptor instead.
func (FileAuthMethod) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

type State int32

const (
	State_Stopped State = 0
	State_Running State = 1
)

// Enum value maps for State.
var (
	State_name = map[int32]string{
		0: "Stopped",
		1: "Running",
	}
	State_value = map[string]int32{
		"Stopped": 0,
		"Running": 1,
	}
)

func (x State) Enum() *State {
	p := new(State)
	*p = x
	return p
}

func (x State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (State) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[1].Descriptor()
}

func (State) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[1]
}

func (x State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use State.Descriptor instead.
func (State) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

type BootStatus_Stage int32

const (
	BootStatus_HANDSHAKE  BootStatus_Stage = 0
	BootStatus_ACQUIRING  BootStatus_Stage = 3
	BootStatus_COMPLETE   BootStatus_Stage = 4
	BootStatus_PROXY      BootStatus_Stage = 5
	BootStatus_PULL_FILES BootStatus_Stage = 6
	BootStatus_LOAD_BLOCK BootStatus_Stage = 7
	BootStatus_RETRY      BootStatus_Stage = 8
)

// Enum value maps for BootStatus_Stage.
var (
	BootStatus_Stage_name = map[int32]string{
		0: "HANDSHAKE",
		3: "ACQUIRING",
		4: "COMPLETE",
		5: "PROXY",
		6: "PULL_FILES",
		7: "LOAD_BLOCK",
		8: "RETRY",
	}
	BootStatus_Stage_value = map[string]int32{
		"HANDSHAKE":  0,
		"ACQUIRING":  3,
		"COMPLETE":   4,
		"PROXY":      5,
		"PULL_FILES": 6,
		"LOAD_BLOCK": 7,
		"RETRY":      8,
	}
)

func (x BootStatus_Stage) Enum() *BootStatus_Stage {
	p := new(BootStatus_Stage)
	*p = x
	return p
}

func (x BootStatus_Stage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BootStatus_Stage) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[2].Descriptor()
}

func (BootStatus_Stage) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[2]
}

func (x BootStatus_Stage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BootStatus_Stage.Descriptor instead.
func (BootStatus_Stage) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6, 0}
}

type FileEvent_Op int32

const (
	FileEvent_Create FileEvent_Op = 0
	FileEvent_Move   FileEvent_Op = 1
	FileEvent_Remove FileEvent_Op = 2
	FileEvent_Modify FileEvent_Op = 3
)

// Enum value maps for FileEvent_Op.
var (
	FileEvent_Op_name = map[int32]string{
		0: "Create",
		1: "Move",
		2: "Remove",
		3: "Modify",
	}
	FileEvent_Op_value = map[string]int32{
		"Create": 0,
		"Move":   1,
		"Remove": 2,
		"Modify": 3,
	}
)

func (x FileEvent_Op) Enum() *FileEvent_Op {
	p := new(FileEvent_Op)
	*p = x
	return p
}

func (x FileEvent_Op) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileEvent_Op) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[3].Descriptor()
}

func (FileEvent_Op) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[3]
}

func (x FileEvent_Op) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileEvent_Op.Descriptor instead.
func (FileEvent_Op) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11, 0}
}

type VCREntry_Direction int32

const (
	VCREntry_IN  VCREntry_Direction = 0
	VCREntry_OUT VCREntry_Direction = 1
)

// Enum value maps for VCREntry_Direction.
var (
	VCREntry_Direction_name = map[int32]string{
		0: "IN",
		1: "OUT",
	}
	VCREntry_Direction_value = map[string]int32{
		"IN":  0,
		"OUT": 1,
	}
)

func (x VCREntry_Direction) Enum() *VCREntry_Direction {
	p := new(VCREntry_Direction)
	*p = x
	return p
}

func (x VCREntry_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VCREntry_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[4].Descriptor()
}

func (VCREntry_Direction) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[4]
}

func (x VCREntry_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VCREntry_Direction.Descriptor instead.
func (VCREntry_Direction) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{15, 0}
}

type File_Type int32

const (
	File_REGULAR   File_Type = 0
	File_DIRECTORY File_Type = 1
)

// Enum value maps for File_Type.
var (
	File_Type_name = map[int32]string{
		0: "REGULAR",
		1: "DIRECTORY",
	}
	File_Type_value = map[string]int32{
		"REGULAR":   0,
		"DIRECTORY": 1,
	}
)

func (x File_Type) Enum() *File_Type {
	p := new(File_Type)
	*p = x
	return p
}

func (x File_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (File_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[5].Descriptor()
}

func (File_Type) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[5]
}

func (x File_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use File_Type.Descriptor instead.
func (File_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{51, 0}
}

type OpenChannel_Action int32

const (
	OpenChannel_CREATE           OpenChannel_Action = 0
	OpenChannel_ATTACH           OpenChannel_Action = 1
	OpenChannel_ATTACH_OR_CREATE OpenChannel_Action = 2
)

// Enum value maps for OpenChannel_Action.
var (
	OpenChannel_Action_name = map[int32]string{
		0: "CREATE",
		1: "ATTACH",
		2: "ATTACH_OR_CREATE",
	}
	OpenChannel_Action_value = map[string]int32{
		"CREATE":           0,
		"ATTACH":           1,
		"ATTACH_OR_CREATE": 2,
	}
)

func (x OpenChannel_Action) Enum() *OpenChannel_Action {
	p := new(OpenChannel_Action)
	*p = x
	return p
}

func (x OpenChannel_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpenChannel_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[6].Descriptor()
}

func (OpenChannel_Action) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[6]
}

func (x OpenChannel_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpenChannel_Action.Descriptor instead.
func (OpenChannel_Action) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{57, 0}
}

type OpenChannelRes_State int32

const (
	OpenChannelRes_CREATED  OpenChannelRes_State = 0
	OpenChannelRes_ATTACHED OpenChannelRes_State = 1
	OpenChannelRes_ERROR    OpenChannelRes_State = 2
)

// Enum value maps for OpenChannelRes_State.
var (
	OpenChannelRes_State_name = map[int32]string{
		0: "CREATED",
		1: "ATTACHED",
		2: "ERROR",
	}
	OpenChannelRes_State_value = map[string]int32{
		"CREATED":  0,
		"ATTACHED": 1,
		"ERROR":    2,
	}
)

func (x OpenChannelRes_State) Enum() *OpenChannelRes_State {
	p := new(OpenChannelRes_State)
	*p = x
	return p
}

func (x OpenChannelRes_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpenChannelRes_State) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[7].Descriptor()
}

func (OpenChannelRes_State) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[7]
}

func (x OpenChannelRes_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpenChannelRes_State.Descriptor instead.
func (OpenChannelRes_State) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{58, 0}
}

type CloseChannel_Action int32

const (
	CloseChannel_DISCONNECT CloseChannel_Action = 0
	CloseChannel_TRY_CLOSE  CloseChannel_Action = 1
	CloseChannel_CLOSE      CloseChannel_Action = 2
)

// Enum value maps for CloseChannel_Action.
var (
	CloseChannel_Action_name = map[int32]string{
		0: "DISCONNECT",
		1: "TRY_CLOSE",
		2: "CLOSE",
	}
	CloseChannel_Action_value = map[string]int32{
		"DISCONNECT": 0,
		"TRY_CLOSE":  1,
		"CLOSE":      2,
	}
)

func (x CloseChannel_Action) Enum() *CloseChannel_Action {
	p := new(CloseChannel_Action)
	*p = x
	return p
}

func (x CloseChannel_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CloseChannel_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[8].Descriptor()
}

func (CloseChannel_Action) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[8]
}

func (x CloseChannel_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CloseChannel_Action.Descriptor instead.
func (CloseChannel_Action) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{59, 0}
}

type CloseChannelRes_Status int32

const (
	CloseChannelRes_DISCONNECT CloseChannelRes_Status = 0
	CloseChannelRes_CLOSE      CloseChannelRes_Status = 1
	CloseChannelRes_NOTHING    CloseChannelRes_Status = 2
)

// Enum value maps for CloseChannelRes_Status.
var (
	CloseChannelRes_Status_name = map[int32]string{
		0: "DISCONNECT",
		1: "CLOSE",
		2: "NOTHING",
	}
	CloseChannelRes_Status_value = map[string]int32{
		"DISCONNECT": 0,
		"CLOSE":      1,
		"NOTHING":    2,
	}
)

func (x CloseChannelRes_Status) Enum() *CloseChannelRes_Status {
	p := new(CloseChannelRes_Status)
	*p = x
	return p
}

func (x CloseChannelRes_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CloseChannelRes_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[9].Descriptor()
}

func (CloseChannelRes_Status) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[9]
}

func (x CloseChannelRes_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CloseChannelRes_Status.Descriptor instead.
func (CloseChannelRes_Status) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{60, 0}
}

type ContainerState_State int32

const (
	ContainerState_SLEEP ContainerState_State = 0
	ContainerState_READY ContainerState_State = 1
)

// Enum value maps for ContainerState_State.
var (
	ContainerState_State_name = map[int32]string{
		0: "SLEEP",
		1: "READY",
	}
	ContainerState_State_value = map[string]int32{
		"SLEEP": 0,
		"READY": 1,
	}
)

func (x ContainerState_State) Enum() *ContainerState_State {
	p := new(ContainerState_State)
	*p = x
	return p
}

func (x ContainerState_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContainerState_State) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[10].Descriptor()
}

func (ContainerState_State) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[10]
}

func (x ContainerState_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContainerState_State.Descriptor instead.
func (ContainerState_State) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{61, 0}
}

type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// channel and session act as namespaces with 0 being global.
	// both session and channel must match for a client to receive a command.
	Channel int32 `protobuf:"varint,1,opt,name=channel,proto3" json:"channel,omitempty"`
	// < 0 : all user sessions except abs(id)
	//   0 : all user sessions
	//   1 : internal message to conman
	// > 1 : user session with given id
	Session int32 `protobuf:"varint,2,opt,name=session,proto3" json:"session,omitempty"`
	// Types that are assignable to Body:
	//	*Command_OpenChan
	//	*Command_OpenChanRes
	//	*Command_CloseChan
	//	*Command_CloseChanRes
	//	*Command_ContainerState
	//	*Command_PortOpen
	//	*Command_Toast
	//	*Command_Redirect
	//	*Command_AlwaysOn
	//	*Command_RunMain
	//	*Command_Clear
	//	*Command_Eval
	//	*Command_Result
	//	*Command_Input
	//	*Command_Output
	//	*Command_Error
	//	*Command_SaneTerm
	//	*Command_ResizeTerm
	//	*Command_State
	//	*Command_Ok
	//	*Command_Persist
	//	*Command_PersistMirror
	//	*Command_Write
	//	*Command_Remove
	//	*Command_Move
	//	*Command_TryRemove
	//	*Command_Mkdir
	//	*Command_Stat
	//	*Command_StatRes
	//	*Command_Read
	//	*Command_Readdir
	//	*Command_Files
	//	*Command_File
	//	*Command_CheckChanges
	//	*Command_ChangedFiles
	//	*Command_LintResults
	//	*Command_RunContainedTest
	//	*Command_TestResult
	//	*Command_DebuggerStart
	//	*Command_DebuggerStep
	//	*Command_DebuggerStatus
	//	*Command_EnsurePackages
	//	*Command_Ping
	//	*Command_Pong
	//	*Command_Hello
	//	*Command_Goodbye
	//	*Command_Hint
	//	*Command_Connect
	//	*Command_Send
	//	*Command_Recv
	//	*Command_Disconnect
	//	*Command_FileAuthReq
	//	*Command_FileAuthRes
	//	*Command_MutliFileAuthRes
	//	*Command_ListObjects
	//	*Command_ListObjectsResp
	//	*Command_Ot
	//	*Command_Otstatus
	//	*Command_OtLinkFile
	//	*Command_OtNewCursor
	//	*Command_OtDeleteCursor
	//	*Command_OtFetchRequest
	//	*Command_OtFetchResponse
	//	*Command_Flush
	//	*Command_Debug
	//	*Command_StartVCR
	//	*Command_ReadVCR
	//	*Command_VCRLog
	//	*Command_Auth
	//	*Command_ExecInfo
	//	*Command_SubscribeFile
	//	*Command_FileEvent
	//	*Command_Roster
	//	*Command_Join
	//	*Command_Part
	//	*Command_Exec
	//	*Command_PackageSearch
	//	*Command_PackageSearchResp
	//	*Command_PackageInfo
	//	*Command_PackageInfoResp
	//	*Command_PackageAdd
	//	*Command_PackageRemove
	//	*Command_PackageInstall
	//	*Command_PackageListSpecfile
	//	*Command_PackageListSpecfileResp
	//	*Command_PackageCacheSave
	//	*Command_ChatMessage
	//	*Command_ChatTyping
	//	*Command_ChatScrollback
	//	*Command_FsSnapshot
	//	*Command_FsTakeLock
	//	*Command_FsReleaseLock
	//	*Command_HasCap
	//	*Command_Pid1Config
	//	*Command_Metrics
	//	*Command_BootStatus
	//	*Command_ReadMeta
	//	*Command_WriteMeta
	//	*Command_AppendMeta
	//	*Command_Audio
	//	*Command_PprofRequest
	//	*Command_PprofResponse
	//	*Command_Audio2
	//	*Command_PTYConfig
	Body isCommand_Body `protobuf_oneof:"body"`
	Ref  string         `protobuf:"bytes,1000,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *Command) GetChannel() int32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *Command) GetSession() int32 {
	if x != nil {
		return x.Session
	}
	return 0
}

func (m *Command) GetBody() isCommand_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *Command) GetOpenChan() *OpenChannel {
	if x, ok := x.GetBody().(*Command_OpenChan); ok {
		return x.OpenChan
	}
	return nil
}

func (x *Command) GetOpenChanRes() *OpenChannelRes {
	if x, ok := x.GetBody().(*Command_OpenChanRes); ok {
		return x.OpenChanRes
	}
	return nil
}

func (x *Command) GetCloseChan() *CloseChannel {
	if x, ok := x.GetBody().(*Command_CloseChan); ok {
		return x.CloseChan
	}
	return nil
}

func (x *Command) GetCloseChanRes() *CloseChannelRes {
	if x, ok := x.GetBody().(*Command_CloseChanRes); ok {
		return x.CloseChanRes
	}
	return nil
}

func (x *Command) GetContainerState() *ContainerState {
	if x, ok := x.GetBody().(*Command_ContainerState); ok {
		return x.ContainerState
	}
	return nil
}

func (x *Command) GetPortOpen() *PortOpen {
	if x, ok := x.GetBody().(*Command_PortOpen); ok {
		return x.PortOpen
	}
	return nil
}

func (x *Command) GetToast() *Toast {
	if x, ok := x.GetBody().(*Command_Toast); ok {
		return x.Toast
	}
	return nil
}

func (x *Command) GetRedirect() *Redirect {
	if x, ok := x.GetBody().(*Command_Redirect); ok {
		return x.Redirect
	}
	return nil
}

func (x *Command) GetAlwaysOn() *AlwaysOn {
	if x, ok := x.GetBody().(*Command_AlwaysOn); ok {
		return x.AlwaysOn
	}
	return nil
}

func (x *Command) GetRunMain() *RunMain {
	if x, ok := x.GetBody().(*Command_RunMain); ok {
		return x.RunMain
	}
	return nil
}

func (x *Command) GetClear() *Clear {
	if x, ok := x.GetBody().(*Command_Clear); ok {
		return x.Clear
	}
	return nil
}

func (x *Command) GetEval() string {
	if x, ok := x.GetBody().(*Command_Eval); ok {
		return x.Eval
	}
	return ""
}

func (x *Command) GetResult() string {
	if x, ok := x.GetBody().(*Command_Result); ok {
		return x.Result
	}
	return ""
}

func (x *Command) GetInput() string {
	if x, ok := x.GetBody().(*Command_Input); ok {
		return x.Input
	}
	return ""
}

func (x *Command) GetOutput() string {
	if x, ok := x.GetBody().(*Command_Output); ok {
		return x.Output
	}
	return ""
}

func (x *Command) GetError() string {
	if x, ok := x.GetBody().(*Command_Error); ok {
		return x.Error
	}
	return ""
}

func (x *Command) GetSaneTerm() *SaneTerm {
	if x, ok := x.GetBody().(*Command_SaneTerm); ok {
		return x.SaneTerm
	}
	return nil
}

func (x *Command) GetResizeTerm() *ResizeTerm {
	if x, ok := x.GetBody().(*Command_ResizeTerm); ok {
		return x.ResizeTerm
	}
	return nil
}

func (x *Command) GetState() State {
	if x, ok := x.GetBody().(*Command_State); ok {
		return x.State
	}
	return State_Stopped
}

func (x *Command) GetOk() *OK {
	if x, ok := x.GetBody().(*Command_Ok); ok {
		return x.Ok
	}
	return nil
}

func (x *Command) GetPersist() *File {
	if x, ok := x.GetBody().(*Command_Persist); ok {
		return x.Persist
	}
	return nil
}

func (x *Command) GetPersistMirror() *File {
	if x, ok := x.GetBody().(*Command_PersistMirror); ok {
		return x.PersistMirror
	}
	return nil
}

func (x *Command) GetWrite() *File {
	if x, ok := x.GetBody().(*Command_Write); ok {
		return x.Write
	}
	return nil
}

func (x *Command) GetRemove() *File {
	if x, ok := x.GetBody().(*Command_Remove); ok {
		return x.Remove
	}
	return nil
}

func (x *Command) GetMove() *Move {
	if x, ok := x.GetBody().(*Command_Move); ok {
		return x.Move
	}
	return nil
}

func (x *Command) GetTryRemove() *File {
	if x, ok := x.GetBody().(*Command_TryRemove); ok {
		return x.TryRemove
	}
	return nil
}

func (x *Command) GetMkdir() *File {
	if x, ok := x.GetBody().(*Command_Mkdir); ok {
		return x.Mkdir
	}
	return nil
}

func (x *Command) GetStat() *File {
	if x, ok := x.GetBody().(*Command_Stat); ok {
		return x.Stat
	}
	return nil
}

func (x *Command) GetStatRes() *StatResult {
	if x, ok := x.GetBody().(*Command_StatRes); ok {
		return x.StatRes
	}
	return nil
}

func (x *Command) GetRead() *File {
	if x, ok := x.GetBody().(*Command_Read); ok {
		return x.Read
	}
	return nil
}

func (x *Command) GetReaddir() *File {
	if x, ok := x.GetBody().(*Command_Readdir); ok {
		return x.Readdir
	}
	return nil
}

func (x *Command) GetFiles() *Files {
	if x, ok := x.GetBody().(*Command_Files); ok {
		return x.Files
	}
	return nil
}

func (x *Command) GetFile() *File {
	if x, ok := x.GetBody().(*Command_File); ok {
		return x.File
	}
	return nil
}

func (x *Command) GetCheckChanges() *CheckChanges {
	if x, ok := x.GetBody().(*Command_CheckChanges); ok {
		return x.CheckChanges
	}
	return nil
}

func (x *Command) GetChangedFiles() *Files {
	if x, ok := x.GetBody().(*Command_ChangedFiles); ok {
		return x.ChangedFiles
	}
	return nil
}

func (x *Command) GetLintResults() *LintResults {
	if x, ok := x.GetBody().(*Command_LintResults); ok {
		return x.LintResults
	}
	return nil
}

func (x *Command) GetRunContainedTest() *ContainedTest {
	if x, ok := x.GetBody().(*Command_RunContainedTest); ok {
		return x.RunContainedTest
	}
	return nil
}

func (x *Command) GetTestResult() *TestResult {
	if x, ok := x.GetBody().(*Command_TestResult); ok {
		return x.TestResult
	}
	return nil
}

func (x *Command) GetDebuggerStart() string {
	if x, ok := x.GetBody().(*Command_DebuggerStart); ok {
		return x.DebuggerStart
	}
	return ""
}

func (x *Command) GetDebuggerStep() *RunMain {
	if x, ok := x.GetBody().(*Command_DebuggerStep); ok {
		return x.DebuggerStep
	}
	return nil
}

func (x *Command) GetDebuggerStatus() *DebugStatus {
	if x, ok := x.GetBody().(*Command_DebuggerStatus); ok {
		return x.DebuggerStatus
	}
	return nil
}

func (x *Command) GetEnsurePackages() *EnsurePackages {
	if x, ok := x.GetBody().(*Command_EnsurePackages); ok {
		return x.EnsurePackages
	}
	return nil
}

func (x *Command) GetPing() *Ping {
	if x, ok := x.GetBody().(*Command_Ping); ok {
		return x.Ping
	}
	return nil
}

func (x *Command) GetPong() *Pong {
	if x, ok := x.GetBody().(*Command_Pong); ok {
		return x.Pong
	}
	return nil
}

func (x *Command) GetHello() *Hello {
	if x, ok := x.GetBody().(*Command_Hello); ok {
		return x.Hello
	}
	return nil
}

func (x *Command) GetGoodbye() *Goodbye {
	if x, ok := x.GetBody().(*Command_Goodbye); ok {
		return x.Goodbye
	}
	return nil
}

func (x *Command) GetHint() *Hint {
	if x, ok := x.GetBody().(*Command_Hint); ok {
		return x.Hint
	}
	return nil
}

func (x *Command) GetConnect() *Connect {
	if x, ok := x.GetBody().(*Command_Connect); ok {
		return x.Connect
	}
	return nil
}

func (x *Command) GetSend() *Send {
	if x, ok := x.GetBody().(*Command_Send); ok {
		return x.Send
	}
	return nil
}

func (x *Command) GetRecv() *Recv {
	if x, ok := x.GetBody().(*Command_Recv); ok {
		return x.Recv
	}
	return nil
}

func (x *Command) GetDisconnect() *Disconnect {
	if x, ok := x.GetBody().(*Command_Disconnect); ok {
		return x.Disconnect
	}
	return nil
}

func (x *Command) GetFileAuthReq() *FileAuthReq {
	if x, ok := x.GetBody().(*Command_FileAuthReq); ok {
		return x.FileAuthReq
	}
	return nil
}

func (x *Command) GetFileAuthRes() *FileAuthRes {
	if x, ok := x.GetBody().(*Command_FileAuthRes); ok {
		return x.FileAuthRes
	}
	return nil
}

func (x *Command) GetMutliFileAuthRes() *MultiFileAuthRes {
	if x, ok := x.GetBody().(*Command_MutliFileAuthRes); ok {
		return x.MutliFileAuthRes
	}
	return nil
}

func (x *Command) GetListObjects() *ListObjects {
	if x, ok := x.GetBody().(*Command_ListObjects); ok {
		return x.ListObjects
	}
	return nil
}

func (x *Command) GetListObjectsResp() *ListObjectsResp {
	if x, ok := x.GetBody().(*Command_ListObjectsResp); ok {
		return x.ListObjectsResp
	}
	return nil
}

func (x *Command) GetOt() *OTPacket {
	if x, ok := x.GetBody().(*Command_Ot); ok {
		return x.Ot
	}
	return nil
}

func (x *Command) GetOtstatus() *OTStatus {
	if x, ok := x.GetBody().(*Command_Otstatus); ok {
		return x.Otstatus
	}
	return nil
}

func (x *Command) GetOtLinkFile() *OTLinkFile {
	if x, ok := x.GetBody().(*Command_OtLinkFile); ok {
		return x.OtLinkFile
	}
	return nil
}

func (x *Command) GetOtNewCursor() *OTCursor {
	if x, ok := x.GetBody().(*Command_OtNewCursor); ok {
		return x.OtNewCursor
	}
	return nil
}

func (x *Command) GetOtDeleteCursor() *OTCursor {
	if x, ok := x.GetBody().(*Command_OtDeleteCursor); ok {
		return x.OtDeleteCursor
	}
	return nil
}

func (x *Command) GetOtFetchRequest() *OTFetchRequest {
	if x, ok := x.GetBody().(*Command_OtFetchRequest); ok {
		return x.OtFetchRequest
	}
	return nil
}

func (x *Command) GetOtFetchResponse() *OTFetchResponse {
	if x, ok := x.GetBody().(*Command_OtFetchResponse); ok {
		return x.OtFetchResponse
	}
	return nil
}

func (x *Command) GetFlush() *Flush {
	if x, ok := x.GetBody().(*Command_Flush); ok {
		return x.Flush
	}
	return nil
}

func (x *Command) GetDebug() *Debug {
	if x, ok := x.GetBody().(*Command_Debug); ok {
		return x.Debug
	}
	return nil
}

func (x *Command) GetStartVCR() *StartVCR {
	if x, ok := x.GetBody().(*Command_StartVCR); ok {
		return x.StartVCR
	}
	return nil
}

func (x *Command) GetReadVCR() *ReadVCR {
	if x, ok := x.GetBody().(*Command_ReadVCR); ok {
		return x.ReadVCR
	}
	return nil
}

func (x *Command) GetVCRLog() *VCRLog {
	if x, ok := x.GetBody().(*Command_VCRLog); ok {
		return x.VCRLog
	}
	return nil
}

func (x *Command) GetAuth() *Auth {
	if x, ok := x.GetBody().(*Command_Auth); ok {
		return x.Auth
	}
	return nil
}

func (x *Command) GetExecInfo() *ExecInfo {
	if x, ok := x.GetBody().(*Command_ExecInfo); ok {
		return x.ExecInfo
	}
	return nil
}

func (x *Command) GetSubscribeFile() *SubscribeFile {
	if x, ok := x.GetBody().(*Command_SubscribeFile); ok {
		return x.SubscribeFile
	}
	return nil
}

func (x *Command) GetFileEvent() *FileEvent {
	if x, ok := x.GetBody().(*Command_FileEvent); ok {
		return x.FileEvent
	}
	return nil
}

func (x *Command) GetRoster() *Roster {
	if x, ok := x.GetBody().(*Command_Roster); ok {
		return x.Roster
	}
	return nil
}

func (x *Command) GetJoin() *User {
	if x, ok := x.GetBody().(*Command_Join); ok {
		return x.Join
	}
	return nil
}

func (x *Command) GetPart() *User {
	if x, ok := x.GetBody().(*Command_Part); ok {
		return x.Part
	}
	return nil
}

func (x *Command) GetExec() *Exec {
	if x, ok := x.GetBody().(*Command_Exec); ok {
		return x.Exec
	}
	return nil
}

func (x *Command) GetPackageSearch() *PackageSearch {
	if x, ok := x.GetBody().(*Command_PackageSearch); ok {
		return x.PackageSearch
	}
	return nil
}

func (x *Command) GetPackageSearchResp() *PackageSearchResp {
	if x, ok := x.GetBody().(*Command_PackageSearchResp); ok {
		return x.PackageSearchResp
	}
	return nil
}

func (x *Command) GetPackageInfo() *PackageInfo {
	if x, ok := x.GetBody().(*Command_PackageInfo); ok {
		return x.PackageInfo
	}
	return nil
}

func (x *Command) GetPackageInfoResp() *PackageInfoResp {
	if x, ok := x.GetBody().(*Command_PackageInfoResp); ok {
		return x.PackageInfoResp
	}
	return nil
}

func (x *Command) GetPackageAdd() *PackageAdd {
	if x, ok := x.GetBody().(*Command_PackageAdd); ok {
		return x.PackageAdd
	}
	return nil
}

func (x *Command) GetPackageRemove() *PackageRemove {
	if x, ok := x.GetBody().(*Command_PackageRemove); ok {
		return x.PackageRemove
	}
	return nil
}

func (x *Command) GetPackageInstall() *PackageInstall {
	if x, ok := x.GetBody().(*Command_PackageInstall); ok {
		return x.PackageInstall
	}
	return nil
}

func (x *Command) GetPackageListSpecfile() *PackageListSpecfile {
	if x, ok := x.GetBody().(*Command_PackageListSpecfile); ok {
		return x.PackageListSpecfile
	}
	return nil
}

func (x *Command) GetPackageListSpecfileResp() *PackageListSpecfileResp {
	if x, ok := x.GetBody().(*Command_PackageListSpecfileResp); ok {
		return x.PackageListSpecfileResp
	}
	return nil
}

func (x *Command) GetPackageCacheSave() *PackageCacheSave {
	if x, ok := x.GetBody().(*Command_PackageCacheSave); ok {
		return x.PackageCacheSave
	}
	return nil
}

func (x *Command) GetChatMessage() *ChatMessage {
	if x, ok := x.GetBody().(*Command_ChatMessage); ok {
		return x.ChatMessage
	}
	return nil
}

func (x *Command) GetChatTyping() *ChatTyping {
	if x, ok := x.GetBody().(*Command_ChatTyping); ok {
		return x.ChatTyping
	}
	return nil
}

func (x *Command) GetChatScrollback() *ChatScrollback {
	if x, ok := x.GetBody().(*Command_ChatScrollback); ok {
		return x.ChatScrollback
	}
	return nil
}

func (x *Command) GetFsSnapshot() *FSSnapshot {
	if x, ok := x.GetBody().(*Command_FsSnapshot); ok {
		return x.FsSnapshot
	}
	return nil
}

func (x *Command) GetFsTakeLock() *FSLock {
	if x, ok := x.GetBody().(*Command_FsTakeLock); ok {
		return x.FsTakeLock
	}
	return nil
}

func (x *Command) GetFsReleaseLock() *FSLock {
	if x, ok := x.GetBody().(*Command_FsReleaseLock); ok {
		return x.FsReleaseLock
	}
	return nil
}

func (x *Command) GetHasCap() bool {
	if x, ok := x.GetBody().(*Command_HasCap); ok {
		return x.HasCap
	}
	return false
}

func (x *Command) GetPid1Config() *Pid1Config {
	if x, ok := x.GetBody().(*Command_Pid1Config); ok {
		return x.Pid1Config
	}
	return nil
}

func (x *Command) GetMetrics() *Metrics {
	if x, ok := x.GetBody().(*Command_Metrics); ok {
		return x.Metrics
	}
	return nil
}

func (x *Command) GetBootStatus() *BootStatus {
	if x, ok := x.GetBody().(*Command_BootStatus); ok {
		return x.BootStatus
	}
	return nil
}

func (x *Command) GetReadMeta() *ReadMeta {
	if x, ok := x.GetBody().(*Command_ReadMeta); ok {
		return x.ReadMeta
	}
	return nil
}

func (x *Command) GetWriteMeta() *WriteMeta {
	if x, ok := x.GetBody().(*Command_WriteMeta); ok {
		return x.WriteMeta
	}
	return nil
}

func (x *Command) GetAppendMeta() *AppendMeta {
	if x, ok := x.GetBody().(*Command_AppendMeta); ok {
		return x.AppendMeta
	}
	return nil
}

func (x *Command) GetAudio() *Audio {
	if x, ok := x.GetBody().(*Command_Audio); ok {
		return x.Audio
	}
	return nil
}

func (x *Command) GetPprofRequest() *PprofRequest {
	if x, ok := x.GetBody().(*Command_PprofRequest); ok {
		return x.PprofRequest
	}
	return nil
}

func (x *Command) GetPprofResponse() *PprofResponse {
	if x, ok := x.GetBody().(*Command_PprofResponse); ok {
		return x.PprofResponse
	}
	return nil
}

func (x *Command) GetAudio2() *Audio2 {
	if x, ok := x.GetBody().(*Command_Audio2); ok {
		return x.Audio2
	}
	return nil
}

func (x *Command) GetPTYConfig() *PTYConfig {
	if x, ok := x.GetBody().(*Command_PTYConfig); ok {
		return x.PTYConfig
	}
	return nil
}

func (x *Command) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

type isCommand_Body interface {
	isCommand_Body()
}

type Command_OpenChan struct {
	OpenChan *OpenChannel `protobuf:"bytes,3,opt,name=openChan,proto3,oneof"`
}

type Command_OpenChanRes struct {
	OpenChanRes *OpenChannelRes `protobuf:"bytes,4,opt,name=openChanRes,proto3,oneof"`
}

type Command_CloseChan struct {
	CloseChan *CloseChannel `protobuf:"bytes,5,opt,name=closeChan,proto3,oneof"`
}

type Command_CloseChanRes struct {
	CloseChanRes *CloseChannelRes `protobuf:"bytes,6,opt,name=closeChanRes,proto3,oneof"`
}

type Command_ContainerState struct {
	ContainerState *ContainerState `protobuf:"bytes,9,opt,name=containerState,proto3,oneof"`
}

type Command_PortOpen struct {
	PortOpen *PortOpen `protobuf:"bytes,10,opt,name=portOpen,proto3,oneof"`
}

type Command_Toast struct {
	Toast *Toast `protobuf:"bytes,11,opt,name=toast,proto3,oneof"`
}

type Command_Redirect struct {
	Redirect *Redirect `protobuf:"bytes,12,opt,name=redirect,proto3,oneof"`
}

type Command_AlwaysOn struct {
	AlwaysOn *AlwaysOn `protobuf:"bytes,13,opt,name=alwaysOn,proto3,oneof"`
}

type Command_RunMain struct {
	RunMain *RunMain `protobuf:"bytes,16,opt,name=runMain,proto3,oneof"`
}

type Command_Clear struct {
	Clear *Clear `protobuf:"bytes,17,opt,name=clear,proto3,oneof"`
}

type Command_Eval struct {
	Eval string `protobuf:"bytes,20,opt,name=eval,proto3,oneof"`
}

type Command_Result struct {
	Result string `protobuf:"bytes,21,opt,name=result,proto3,oneof"`
}

type Command_Input struct {
	Input string `protobuf:"bytes,22,opt,name=input,proto3,oneof"`
}

type Command_Output struct {
	Output string `protobuf:"bytes,23,opt,name=output,proto3,oneof"`
}

type Command_Error struct {
	Error string `protobuf:"bytes,24,opt,name=error,proto3,oneof"`
}

type Command_SaneTerm struct {
	SaneTerm *SaneTerm `protobuf:"bytes,26,opt,name=saneTerm,proto3,oneof"`
}

type Command_ResizeTerm struct {
	ResizeTerm *ResizeTerm `protobuf:"bytes,27,opt,name=resizeTerm,proto3,oneof"`
}

type Command_State struct {
	State State `protobuf:"varint,28,opt,name=state,proto3,enum=api.State,oneof"`
}

type Command_Ok struct {
	Ok *OK `protobuf:"bytes,30,opt,name=ok,proto3,oneof"`
}

type Command_Persist struct {
	Persist *File `protobuf:"bytes,31,opt,name=persist,proto3,oneof"`
}

type Command_PersistMirror struct {
	PersistMirror *File `protobuf:"bytes,41,opt,name=persistMirror,proto3,oneof"`
}

type Command_Write struct {
	Write *File `protobuf:"bytes,32,opt,name=write,proto3,oneof"`
}

type Command_Remove struct {
	Remove *File `protobuf:"bytes,33,opt,name=remove,proto3,oneof"`
}

type Command_Move struct {
	Move *Move `protobuf:"bytes,34,opt,name=move,proto3,oneof"`
}

type Command_TryRemove struct {
	TryRemove *File `protobuf:"bytes,36,opt,name=tryRemove,proto3,oneof"`
}

type Command_Mkdir struct {
	Mkdir *File `protobuf:"bytes,39,opt,name=mkdir,proto3,oneof"`
}

type Command_Stat struct {
	Stat *File `protobuf:"bytes,368,opt,name=stat,proto3,oneof"`
}

type Command_StatRes struct {
	StatRes *StatResult `protobuf:"bytes,369,opt,name=statRes,proto3,oneof"`
}

type Command_Read struct {
	Read *File `protobuf:"bytes,35,opt,name=read,proto3,oneof"`
}

type Command_Readdir struct {
	Readdir *File `protobuf:"bytes,37,opt,name=readdir,proto3,oneof"`
}

type Command_Files struct {
	Files *Files `protobuf:"bytes,38,opt,name=files,proto3,oneof"`
}

type Command_File struct {
	File *File `protobuf:"bytes,40,opt,name=file,proto3,oneof"`
}

type Command_CheckChanges struct {
	CheckChanges *CheckChanges `protobuf:"bytes,42,opt,name=checkChanges,proto3,oneof"`
}

type Command_ChangedFiles struct {
	ChangedFiles *Files `protobuf:"bytes,43,opt,name=changedFiles,proto3,oneof"`
}

type Command_LintResults struct {
	LintResults *LintResults `protobuf:"bytes,44,opt,name=lintResults,proto3,oneof"`
}

type Command_RunContainedTest struct {
	RunContainedTest *ContainedTest `protobuf:"bytes,70,opt,name=runContainedTest,proto3,oneof"`
}

type Command_TestResult struct {
	TestResult *TestResult `protobuf:"bytes,71,opt,name=testResult,proto3,oneof"`
}

type Command_DebuggerStart struct {
	DebuggerStart string `protobuf:"bytes,90,opt,name=debuggerStart,proto3,oneof"`
}

type Command_DebuggerStep struct {
	DebuggerStep *RunMain `protobuf:"bytes,91,opt,name=debuggerStep,proto3,oneof"`
}

type Command_DebuggerStatus struct {
	DebuggerStatus *DebugStatus `protobuf:"bytes,92,opt,name=debuggerStatus,proto3,oneof"`
}

type Command_EnsurePackages struct {
	EnsurePackages *EnsurePackages `protobuf:"bytes,100,opt,name=ensurePackages,proto3,oneof"`
}

type Command_Ping struct {
	Ping *Ping `protobuf:"bytes,120,opt,name=ping,proto3,oneof"`
}

type Command_Pong struct {
	Pong *Pong `protobuf:"bytes,121,opt,name=pong,proto3,oneof"`
}

type Command_Hello struct {
	Hello *Hello `protobuf:"bytes,122,opt,name=hello,proto3,oneof"`
}

type Command_Goodbye struct {
	Goodbye *Goodbye `protobuf:"bytes,123,opt,name=goodbye,proto3,oneof"`
}

type Command_Hint struct {
	Hint *Hint `protobuf:"bytes,130,opt,name=hint,proto3,oneof"`
}

type Command_Connect struct {
	Connect *Connect `protobuf:"bytes,150,opt,name=connect,proto3,oneof"`
}

type Command_Send struct {
	Send *Send `protobuf:"bytes,151,opt,name=send,proto3,oneof"`
}

type Command_Recv struct {
	Recv *Recv `protobuf:"bytes,152,opt,name=recv,proto3,oneof"`
}

type Command_Disconnect struct {
	Disconnect *Disconnect `protobuf:"bytes,153,opt,name=disconnect,proto3,oneof"`
}

type Command_FileAuthReq struct {
	FileAuthReq *FileAuthReq `protobuf:"bytes,200,opt,name=fileAuthReq,proto3,oneof"`
}

type Command_FileAuthRes struct {
	FileAuthRes *FileAuthRes `protobuf:"bytes,201,opt,name=fileAuthRes,proto3,oneof"`
}

type Command_MutliFileAuthRes struct {
	MutliFileAuthRes *MultiFileAuthRes `protobuf:"bytes,202,opt,name=mutliFileAuthRes,proto3,oneof"`
}

type Command_ListObjects struct {
	ListObjects *ListObjects `protobuf:"bytes,205,opt,name=listObjects,proto3,oneof"`
}

type Command_ListObjectsResp struct {
	ListObjectsResp *ListObjectsResp `protobuf:"bytes,206,opt,name=listObjectsResp,proto3,oneof"`
}

type Command_Ot struct {
	Ot *OTPacket `protobuf:"bytes,220,opt,name=ot,proto3,oneof"`
}

type Command_Otstatus struct {
	Otstatus *OTStatus `protobuf:"bytes,221,opt,name=otstatus,proto3,oneof"`
}

type Command_OtLinkFile struct {
	OtLinkFile *OTLinkFile `protobuf:"bytes,222,opt,name=otLinkFile,proto3,oneof"`
}

type Command_OtNewCursor struct {
	OtNewCursor *OTCursor `protobuf:"bytes,223,opt,name=otNewCursor,proto3,oneof"`
}

type Command_OtDeleteCursor struct {
	OtDeleteCursor *OTCursor `protobuf:"bytes,224,opt,name=otDeleteCursor,proto3,oneof"`
}

type Command_OtFetchRequest struct {
	OtFetchRequest *OTFetchRequest `protobuf:"bytes,225,opt,name=otFetchRequest,proto3,oneof"`
}

type Command_OtFetchResponse struct {
	OtFetchResponse *OTFetchResponse `protobuf:"bytes,226,opt,name=otFetchResponse,proto3,oneof"`
}

type Command_Flush struct {
	Flush *Flush `protobuf:"bytes,251,opt,name=flush,proto3,oneof"`
}

type Command_Debug struct {
	Debug *Debug `protobuf:"bytes,230,opt,name=debug,proto3,oneof"`
}

type Command_StartVCR struct {
	StartVCR *StartVCR `protobuf:"bytes,231,opt,name=startVCR,proto3,oneof"`
}

type Command_ReadVCR struct {
	ReadVCR *ReadVCR `protobuf:"bytes,232,opt,name=readVCR,proto3,oneof"`
}

type Command_VCRLog struct {
	VCRLog *VCRLog `protobuf:"bytes,233,opt,name=VCRLog,proto3,oneof"`
}

type Command_Auth struct {
	Auth *Auth `protobuf:"bytes,235,opt,name=auth,proto3,oneof"`
}

type Command_ExecInfo struct {
	ExecInfo *ExecInfo `protobuf:"bytes,240,opt,name=execInfo,proto3,oneof"`
}

type Command_SubscribeFile struct {
	SubscribeFile *SubscribeFile `protobuf:"bytes,256,opt,name=subscribeFile,proto3,oneof"`
}

type Command_FileEvent struct {
	FileEvent *FileEvent `protobuf:"bytes,257,opt,name=fileEvent,proto3,oneof"`
}

type Command_Roster struct {
	Roster *Roster `protobuf:"bytes,260,opt,name=roster,proto3,oneof"`
}

type Command_Join struct {
	Join *User `protobuf:"bytes,261,opt,name=join,proto3,oneof"`
}

type Command_Part struct {
	Part *User `protobuf:"bytes,262,opt,name=part,proto3,oneof"`
}

type Command_Exec struct {
	Exec *Exec `protobuf:"bytes,270,opt,name=exec,proto3,oneof"`
}

type Command_PackageSearch struct {
	PackageSearch *PackageSearch `protobuf:"bytes,280,opt,name=packageSearch,proto3,oneof"`
}

type Command_PackageSearchResp struct {
	PackageSearchResp *PackageSearchResp `protobuf:"bytes,281,opt,name=packageSearchResp,proto3,oneof"`
}

type Command_PackageInfo struct {
	PackageInfo *PackageInfo `protobuf:"bytes,282,opt,name=packageInfo,proto3,oneof"`
}

type Command_PackageInfoResp struct {
	PackageInfoResp *PackageInfoResp `protobuf:"bytes,283,opt,name=packageInfoResp,proto3,oneof"`
}

type Command_PackageAdd struct {
	PackageAdd *PackageAdd `protobuf:"bytes,284,opt,name=packageAdd,proto3,oneof"`
}

type Command_PackageRemove struct {
	PackageRemove *PackageRemove `protobuf:"bytes,285,opt,name=packageRemove,proto3,oneof"`
}

type Command_PackageInstall struct {
	PackageInstall *PackageInstall `protobuf:"bytes,286,opt,name=packageInstall,proto3,oneof"`
}

type Command_PackageListSpecfile struct {
	PackageListSpecfile *PackageListSpecfile `protobuf:"bytes,287,opt,name=packageListSpecfile,proto3,oneof"`
}

type Command_PackageListSpecfileResp struct {
	PackageListSpecfileResp *PackageListSpecfileResp `protobuf:"bytes,288,opt,name=packageListSpecfileResp,proto3,oneof"`
}

type Command_PackageCacheSave struct {
	PackageCacheSave *PackageCacheSave `protobuf:"bytes,289,opt,name=packageCacheSave,proto3,oneof"`
}

type Command_ChatMessage struct {
	ChatMessage *ChatMessage `protobuf:"bytes,310,opt,name=chatMessage,proto3,oneof"`
}

type Command_ChatTyping struct {
	ChatTyping *ChatTyping `protobuf:"bytes,311,opt,name=chatTyping,proto3,oneof"`
}

type Command_ChatScrollback struct {
	ChatScrollback *ChatScrollback `protobuf:"bytes,312,opt,name=chatScrollback,proto3,oneof"`
}

type Command_FsSnapshot struct {
	FsSnapshot *FSSnapshot `protobuf:"bytes,330,opt,name=fsSnapshot,proto3,oneof"`
}

type Command_FsTakeLock struct {
	FsTakeLock *FSLock `protobuf:"bytes,331,opt,name=fsTakeLock,proto3,oneof"`
}

type Command_FsReleaseLock struct {
	FsReleaseLock *FSLock `protobuf:"bytes,332,opt,name=fsReleaseLock,proto3,oneof"`
}

type Command_HasCap struct {
	HasCap bool `protobuf:"varint,335,opt,name=hasCap,proto3,oneof"`
}

type Command_Pid1Config struct {
	// used to configure pid1 at runtime
	Pid1Config *Pid1Config `protobuf:"bytes,340,opt,name=pid1Config,proto3,oneof"`
}

type Command_Metrics struct {
	Metrics *Metrics `protobuf:"bytes,350,opt,name=metrics,proto3,oneof"`
}

type Command_BootStatus struct {
	BootStatus *BootStatus `protobuf:"bytes,351,opt,name=bootStatus,proto3,oneof"`
}

type Command_ReadMeta struct {
	// metadata store
	ReadMeta *ReadMeta `protobuf:"bytes,360,opt,name=readMeta,proto3,oneof"`
}

type Command_WriteMeta struct {
	WriteMeta *WriteMeta `protobuf:"bytes,361,opt,name=writeMeta,proto3,oneof"`
}

type Command_AppendMeta struct {
	AppendMeta *AppendMeta `protobuf:"bytes,362,opt,name=appendMeta,proto3,oneof"`
}

type Command_Audio struct {
	// audio
	Audio *Audio `protobuf:"bytes,363,opt,name=audio,proto3,oneof"`
}

type Command_PprofRequest struct {
	PprofRequest *PprofRequest `protobuf:"bytes,364,opt,name=pprofRequest,proto3,oneof"`
}

type Command_PprofResponse struct {
	PprofResponse *PprofResponse `protobuf:"bytes,365,opt,name=pprofResponse,proto3,oneof"`
}

type Command_Audio2 struct {
	Audio2 *Audio2 `protobuf:"bytes,366,opt,name=audio2,proto3,oneof"`
}

type Command_PTYConfig struct {
	// used to set configure pty settings
	PTYConfig *PTYConfig `protobuf:"bytes,367,opt,name=PTYConfig,proto3,oneof"`
}

func (*Command_OpenChan) isCommand_Body() {}

func (*Command_OpenChanRes) isCommand_Body() {}

func (*Command_CloseChan) isCommand_Body() {}

func (*Command_CloseChanRes) isCommand_Body() {}

func (*Command_ContainerState) isCommand_Body() {}

func (*Command_PortOpen) isCommand_Body() {}

func (*Command_Toast) isCommand_Body() {}

func (*Command_Redirect) isCommand_Body() {}

func (*Command_AlwaysOn) isCommand_Body() {}

func (*Command_RunMain) isCommand_Body() {}

func (*Command_Clear) isCommand_Body() {}

func (*Command_Eval) isCommand_Body() {}

func (*Command_Result) isCommand_Body() {}

func (*Command_Input) isCommand_Body() {}

func (*Command_Output) isCommand_Body() {}

func (*Command_Error) isCommand_Body() {}

func (*Command_SaneTerm) isCommand_Body() {}

func (*Command_ResizeTerm) isCommand_Body() {}

func (*Command_State) isCommand_Body() {}

func (*Command_Ok) isCommand_Body() {}

func (*Command_Persist) isCommand_Body() {}

func (*Command_PersistMirror) isCommand_Body() {}

func (*Command_Write) isCommand_Body() {}

func (*Command_Remove) isCommand_Body() {}

func (*Command_Move) isCommand_Body() {}

func (*Command_TryRemove) isCommand_Body() {}

func (*Command_Mkdir) isCommand_Body() {}

func (*Command_Stat) isCommand_Body() {}

func (*Command_StatRes) isCommand_Body() {}

func (*Command_Read) isCommand_Body() {}

func (*Command_Readdir) isCommand_Body() {}

func (*Command_Files) isCommand_Body() {}

func (*Command_File) isCommand_Body() {}

func (*Command_CheckChanges) isCommand_Body() {}

func (*Command_ChangedFiles) isCommand_Body() {}

func (*Command_LintResults) isCommand_Body() {}

func (*Command_RunContainedTest) isCommand_Body() {}

func (*Command_TestResult) isCommand_Body() {}

func (*Command_DebuggerStart) isCommand_Body() {}

func (*Command_DebuggerStep) isCommand_Body() {}

func (*Command_DebuggerStatus) isCommand_Body() {}

func (*Command_EnsurePackages) isCommand_Body() {}

func (*Command_Ping) isCommand_Body() {}

func (*Command_Pong) isCommand_Body() {}

func (*Command_Hello) isCommand_Body() {}

func (*Command_Goodbye) isCommand_Body() {}

func (*Command_Hint) isCommand_Body() {}

func (*Command_Connect) isCommand_Body() {}

func (*Command_Send) isCommand_Body() {}

func (*Command_Recv) isCommand_Body() {}

func (*Command_Disconnect) isCommand_Body() {}

func (*Command_FileAuthReq) isCommand_Body() {}

func (*Command_FileAuthRes) isCommand_Body() {}

func (*Command_MutliFileAuthRes) isCommand_Body() {}

func (*Command_ListObjects) isCommand_Body() {}

func (*Command_ListObjectsResp) isCommand_Body() {}

func (*Command_Ot) isCommand_Body() {}

func (*Command_Otstatus) isCommand_Body() {}

func (*Command_OtLinkFile) isCommand_Body() {}

func (*Command_OtNewCursor) isCommand_Body() {}

func (*Command_OtDeleteCursor) isCommand_Body() {}

func (*Command_OtFetchRequest) isCommand_Body() {}

func (*Command_OtFetchResponse) isCommand_Body() {}

func (*Command_Flush) isCommand_Body() {}

func (*Command_Debug) isCommand_Body() {}

func (*Command_StartVCR) isCommand_Body() {}

func (*Command_ReadVCR) isCommand_Body() {}

func (*Command_VCRLog) isCommand_Body() {}

func (*Command_Auth) isCommand_Body() {}

func (*Command_ExecInfo) isCommand_Body() {}

func (*Command_SubscribeFile) isCommand_Body() {}

func (*Command_FileEvent) isCommand_Body() {}

func (*Command_Roster) isCommand_Body() {}

func (*Command_Join) isCommand_Body() {}

func (*Command_Part) isCommand_Body() {}

func (*Command_Exec) isCommand_Body() {}

func (*Command_PackageSearch) isCommand_Body() {}

func (*Command_PackageSearchResp) isCommand_Body() {}

func (*Command_PackageInfo) isCommand_Body() {}

func (*Command_PackageInfoResp) isCommand_Body() {}

func (*Command_PackageAdd) isCommand_Body() {}

func (*Command_PackageRemove) isCommand_Body() {}

func (*Command_PackageInstall) isCommand_Body() {}

func (*Command_PackageListSpecfile) isCommand_Body() {}

func (*Command_PackageListSpecfileResp) isCommand_Body() {}

func (*Command_PackageCacheSave) isCommand_Body() {}

func (*Command_ChatMessage) isCommand_Body() {}

func (*Command_ChatTyping) isCommand_Body() {}

func (*Command_ChatScrollback) isCommand_Body() {}

func (*Command_FsSnapshot) isCommand_Body() {}

func (*Command_FsTakeLock) isCommand_Body() {}

func (*Command_FsReleaseLock) isCommand_Body() {}

func (*Command_HasCap) isCommand_Body() {}

func (*Command_Pid1Config) isCommand_Body() {}

func (*Command_Metrics) isCommand_Body() {}

func (*Command_BootStatus) isCommand_Body() {}

func (*Command_ReadMeta) isCommand_Body() {}

func (*Command_WriteMeta) isCommand_Body() {}

func (*Command_AppendMeta) isCommand_Body() {}

func (*Command_Audio) isCommand_Body() {}

func (*Command_PprofRequest) isCommand_Body() {}

func (*Command_PprofResponse) isCommand_Body() {}

func (*Command_Audio2) isCommand_Body() {}

func (*Command_PTYConfig) isCommand_Body() {}

type Audio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []int32 `protobuf:"varint,1,rep,packed,name=data,proto3" json:"data,omitempty"`
}

func (x *Audio) Reset() {
	*x = Audio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Audio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audio) ProtoMessage() {}

func (x *Audio) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Audio.ProtoReflect.Descriptor instead.
func (*Audio) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *Audio) GetData() []int32 {
	if x != nil {
		return x.Data
	}
	return nil
}

type Audio2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    []int32 `protobuf:"zigzag32,1,rep,packed,name=data,proto3" json:"data,omitempty"`
	Samples int64   `protobuf:"varint,2,opt,name=samples,proto3" json:"samples,omitempty"`
}

func (x *Audio2) Reset() {
	*x = Audio2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Audio2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audio2) ProtoMessage() {}

func (x *Audio2) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Audio2.ProtoReflect.Descriptor instead.
func (*Audio2) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *Audio2) GetData() []int32 {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Audio2) GetSamples() int64 {
	if x != nil {
		return x.Samples
	}
	return 0
}

type ReadMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Exists bool   `protobuf:"varint,2,opt,name=exists,proto3" json:"exists,omitempty"`
	Data   []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ReadMeta) Reset() {
	*x = ReadMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMeta) ProtoMessage() {}

func (x *ReadMeta) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMeta.ProtoReflect.Descriptor instead.
func (*ReadMeta) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *ReadMeta) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ReadMeta) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

func (x *ReadMeta) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type WriteMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WriteMeta) Reset() {
	*x = WriteMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteMeta) ProtoMessage() {}

func (x *WriteMeta) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteMeta.ProtoReflect.Descriptor instead.
func (*WriteMeta) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

func (x *WriteMeta) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WriteMeta) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AppendMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AppendMeta) Reset() {
	*x = AppendMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendMeta) ProtoMessage() {}

func (x *AppendMeta) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendMeta.ProtoReflect.Descriptor instead.
func (*AppendMeta) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *AppendMeta) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AppendMeta) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type BootStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stage BootStatus_Stage `protobuf:"varint,1,opt,name=stage,proto3,enum=api.BootStatus_Stage" json:"stage,omitempty"`
	// progress/total is context dependant. Most stages have no progress info,
	// this is sent as 0/0 (the default value).
	Progress uint32 `protobuf:"varint,2,opt,name=progress,proto3" json:"progress,omitempty"`
	Total    uint32 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *BootStatus) Reset() {
	*x = BootStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootStatus) ProtoMessage() {}

func (x *BootStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootStatus.ProtoReflect.Descriptor instead.
func (*BootStatus) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

func (x *BootStatus) GetStage() BootStatus_Stage {
	if x != nil {
		return x.Stage
	}
	return BootStatus_HANDSHAKE
}

func (x *BootStatus) GetProgress() uint32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *BootStatus) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Pid1Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cwd      string            `protobuf:"bytes,1,opt,name=cwd,proto3" json:"cwd,omitempty"`
	Language string            `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	Env      map[string]string `protobuf:"bytes,3,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Pid1Config) Reset() {
	*x = Pid1Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pid1Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pid1Config) ProtoMessage() {}

func (x *Pid1Config) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pid1Config.ProtoReflect.Descriptor instead.
func (*Pid1Config) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

func (x *Pid1Config) GetCwd() string {
	if x != nil {
		return x.Cwd
	}
	return ""
}

func (x *Pid1Config) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Pid1Config) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

type FSLock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *FSLock) Reset() {
	*x = FSLock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FSLock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FSLock) ProtoMessage() {}

func (x *FSLock) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FSLock.ProtoReflect.Descriptor instead.
func (*FSLock) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

func (x *FSLock) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type FSSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FSSnapshot) Reset() {
	*x = FSSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FSSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FSSnapshot) ProtoMessage() {}

func (x *FSSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FSSnapshot.ProtoReflect.Descriptor instead.
func (*FSSnapshot) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

type SubscribeFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*File `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *SubscribeFile) Reset() {
	*x = SubscribeFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeFile) ProtoMessage() {}

func (x *SubscribeFile) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeFile.ProtoReflect.Descriptor instead.
func (*SubscribeFile) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10}
}

func (x *SubscribeFile) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

type FileEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File *File `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	// when the Op is a Move dest is set to the destination of the move.
	Dest *File        `protobuf:"bytes,3,opt,name=dest,proto3" json:"dest,omitempty"`
	Op   FileEvent_Op `protobuf:"varint,2,opt,name=op,proto3,enum=api.FileEvent_Op" json:"op,omitempty"`
}

func (x *FileEvent) Reset() {
	*x = FileEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileEvent) ProtoMessage() {}

func (x *FileEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileEvent.ProtoReflect.Descriptor instead.
func (*FileEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11}
}

func (x *FileEvent) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *FileEvent) GetDest() *File {
	if x != nil {
		return x.Dest
	}
	return nil
}

func (x *FileEvent) GetOp() FileEvent_Op {
	if x != nil {
		return x.Op
	}
	return FileEvent_Create
}

type Flush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Flush) Reset() {
	*x = Flush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Flush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flush) ProtoMessage() {}

func (x *Flush) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flush.ProtoReflect.Descriptor instead.
func (*Flush) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12}
}

type OTLinkFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File            *File `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	HighConsistency bool  `protobuf:"varint,2,opt,name=highConsistency,proto3" json:"highConsistency,omitempty"`
	// The service will now always consider modtime of the file when
	// comparing history with disk content.
	//
	// Deprecated: Do not use.
	OBSOLETEUseModTime bool `protobuf:"varint,3,opt,name=OBSOLETE_useModTime,json=OBSOLETEUseModTime,proto3" json:"OBSOLETE_useModTime,omitempty"`
}

func (x *OTLinkFile) Reset() {
	*x = OTLinkFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTLinkFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTLinkFile) ProtoMessage() {}

func (x *OTLinkFile) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTLinkFile.ProtoReflect.Descriptor instead.
func (*OTLinkFile) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{13}
}

func (x *OTLinkFile) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *OTLinkFile) GetHighConsistency() bool {
	if x != nil {
		return x.HighConsistency
	}
	return false
}

// Deprecated: Do not use.
func (x *OTLinkFile) GetOBSOLETEUseModTime() bool {
	if x != nil {
		return x.OBSOLETEUseModTime
	}
	return false
}

type Auth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token       string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ContainerID string `protobuf:"bytes,2,opt,name=containerID,proto3" json:"containerID,omitempty"`
}

func (x *Auth) Reset() {
	*x = Auth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth.ProtoReflect.Descriptor instead.
func (*Auth) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{14}
}

func (x *Auth) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Auth) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

type VCREntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp uint64             `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Direction VCREntry_Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=api.VCREntry_Direction" json:"direction,omitempty"`
	Command   *Command           `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	Uid       string             `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`
	Replid    string             `protobuf:"bytes,5,opt,name=replid,proto3" json:"replid,omitempty"`
}

func (x *VCREntry) Reset() {
	*x = VCREntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VCREntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VCREntry) ProtoMessage() {}

func (x *VCREntry) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VCREntry.ProtoReflect.Descriptor instead.
func (*VCREntry) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{15}
}

func (x *VCREntry) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *VCREntry) GetDirection() VCREntry_Direction {
	if x != nil {
		return x.Direction
	}
	return VCREntry_IN
}

func (x *VCREntry) GetCommand() *Command {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *VCREntry) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *VCREntry) GetReplid() string {
	if x != nil {
		return x.Replid
	}
	return ""
}

type StartVCR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartVCR) Reset() {
	*x = StartVCR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartVCR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartVCR) ProtoMessage() {}

func (x *StartVCR) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartVCR.ProtoReflect.Descriptor instead.
func (*StartVCR) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{16}
}

type ReadVCR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadVCR) Reset() {
	*x = ReadVCR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadVCR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadVCR) ProtoMessage() {}

func (x *ReadVCR) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadVCR.ProtoReflect.Descriptor instead.
func (*ReadVCR) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{17}
}

type VCRLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Log     []*VCREntry `protobuf:"bytes,1,rep,name=log,proto3" json:"log,omitempty"`
	Logfile *File       `protobuf:"bytes,2,opt,name=logfile,proto3" json:"logfile,omitempty"`
}

func (x *VCRLog) Reset() {
	*x = VCRLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VCRLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VCRLog) ProtoMessage() {}

func (x *VCRLog) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VCRLog.ProtoReflect.Descriptor instead.
func (*VCRLog) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{18}
}

func (x *VCRLog) GetLog() []*VCREntry {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *VCRLog) GetLogfile() *File {
	if x != nil {
		return x.Logfile
	}
	return nil
}

type ExecInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command []string `protobuf:"bytes,1,rep,name=command,proto3" json:"command,omitempty"`
	Reason  string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *ExecInfo) Reset() {
	*x = ExecInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecInfo) ProtoMessage() {}

func (x *ExecInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecInfo.ProtoReflect.Descriptor instead.
func (*ExecInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{19}
}

func (x *ExecInfo) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *ExecInfo) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type Debug struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Debug) Reset() {
	*x = Debug{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Debug) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Debug) ProtoMessage() {}

func (x *Debug) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Debug.ProtoReflect.Descriptor instead.
func (*Debug) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{20}
}

func (x *Debug) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type FileAuthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File   *File          `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Method FileAuthMethod `protobuf:"varint,2,opt,name=method,proto3,enum=api.FileAuthMethod" json:"method,omitempty"`
}

func (x *FileAuthReq) Reset() {
	*x = FileAuthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileAuthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileAuthReq) ProtoMessage() {}

func (x *FileAuthReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileAuthReq.ProtoReflect.Descriptor instead.
func (*FileAuthReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{21}
}

func (x *FileAuthReq) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *FileAuthReq) GetMethod() FileAuthMethod {
	if x != nil {
		return x.Method
	}
	return FileAuthMethod_GET
}

type MultiFileAuthRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Put *FileAuthRes `protobuf:"bytes,1,opt,name=put,proto3" json:"put,omitempty"`
	Del *FileAuthRes `protobuf:"bytes,2,opt,name=del,proto3" json:"del,omitempty"`
	Get *FileAuthRes `protobuf:"bytes,3,opt,name=get,proto3" json:"get,omitempty"`
}

func (x *MultiFileAuthRes) Reset() {
	*x = MultiFileAuthRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiFileAuthRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiFileAuthRes) ProtoMessage() {}

func (x *MultiFileAuthRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiFileAuthRes.ProtoReflect.Descriptor instead.
func (*MultiFileAuthRes) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{22}
}

func (x *MultiFileAuthRes) GetPut() *FileAuthRes {
	if x != nil {
		return x.Put
	}
	return nil
}

func (x *MultiFileAuthRes) GetDel() *FileAuthRes {
	if x != nil {
		return x.Del
	}
	return nil
}

func (x *MultiFileAuthRes) GetGet() *FileAuthRes {
	if x != nil {
		return x.Get
	}
	return nil
}

type FileAuthRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File   *File          `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Url    string         `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Method FileAuthMethod `protobuf:"varint,3,opt,name=method,proto3,enum=api.FileAuthMethod" json:"method,omitempty"`
	Expire int64          `protobuf:"varint,4,opt,name=expire,proto3" json:"expire,omitempty"`
	Error  string         `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *FileAuthRes) Reset() {
	*x = FileAuthRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileAuthRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileAuthRes) ProtoMessage() {}

func (x *FileAuthRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileAuthRes.ProtoReflect.Descriptor instead.
func (*FileAuthRes) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{23}
}

func (x *FileAuthRes) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *FileAuthRes) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *FileAuthRes) GetMethod() FileAuthMethod {
	if x != nil {
		return x.Method
	}
	return FileAuthMethod_GET
}

func (x *FileAuthRes) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

func (x *FileAuthRes) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ListObjects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prefix string `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
}

func (x *ListObjects) Reset() {
	*x = ListObjects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjects) ProtoMessage() {}

func (x *ListObjects) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjects.ProtoReflect.Descriptor instead.
func (*ListObjects) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{24}
}

func (x *ListObjects) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

type ListObjectsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Objects []string `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
}

func (x *ListObjectsResp) Reset() {
	*x = ListObjectsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjectsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectsResp) ProtoMessage() {}

func (x *ListObjectsResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectsResp.ProtoReflect.Descriptor instead.
func (*ListObjectsResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{25}
}

func (x *ListObjectsResp) GetObjects() []string {
	if x != nil {
		return x.Objects
	}
	return nil
}

type Disconnect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Disconnect) Reset() {
	*x = Disconnect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Disconnect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Disconnect) ProtoMessage() {}

func (x *Disconnect) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Disconnect.ProtoReflect.Descriptor instead.
func (*Disconnect) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{26}
}

func (x *Disconnect) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Send struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buff []byte `protobuf:"bytes,1,opt,name=buff,proto3" json:"buff,omitempty"`
}

func (x *Send) Reset() {
	*x = Send{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Send) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Send) ProtoMessage() {}

func (x *Send) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Send.ProtoReflect.Descriptor instead.
func (*Send) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{27}
}

func (x *Send) GetBuff() []byte {
	if x != nil {
		return x.Buff
	}
	return nil
}

type Recv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buff []byte `protobuf:"bytes,1,opt,name=buff,proto3" json:"buff,omitempty"`
}

func (x *Recv) Reset() {
	*x = Recv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recv) ProtoMessage() {}

func (x *Recv) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recv.ProtoReflect.Descriptor instead.
func (*Recv) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{28}
}

func (x *Recv) GetBuff() []byte {
	if x != nil {
		return x.Buff
	}
	return nil
}

type Connect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proto string `protobuf:"bytes,1,opt,name=proto,proto3" json:"proto,omitempty"`
	Addr  string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *Connect) Reset() {
	*x = Connect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connect) ProtoMessage() {}

func (x *Connect) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connect.ProtoReflect.Descriptor instead.
func (*Connect) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{29}
}

func (x *Connect) GetProto() string {
	if x != nil {
		return x.Proto
	}
	return ""
}

func (x *Connect) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type Hint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Hint) Reset() {
	*x = Hint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hint) ProtoMessage() {}

func (x *Hint) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hint.ProtoReflect.Descriptor instead.
func (*Hint) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{30}
}

func (x *Hint) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Ping) Reset() {
	*x = Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{31}
}

type Pong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Pong) Reset() {
	*x = Pong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pong.ProtoReflect.Descriptor instead.
func (*Pong) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{32}
}

type Hello struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid   uint32 `protobuf:"varint,1,opt,name=userid,proto3" json:"userid,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Token    string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *Hello) Reset() {
	*x = Hello{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hello) ProtoMessage() {}

func (x *Hello) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hello.ProtoReflect.Descriptor instead.
func (*Hello) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{33}
}

func (x *Hello) GetUserid() uint32 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *Hello) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Hello) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type Goodbye struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Goodbye) Reset() {
	*x = Goodbye{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Goodbye) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Goodbye) ProtoMessage() {}

func (x *Goodbye) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Goodbye.ProtoReflect.Descriptor instead.
func (*Goodbye) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{34}
}

type CheckChanges struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CheckChanges) Reset() {
	*x = CheckChanges{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckChanges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckChanges) ProtoMessage() {}

func (x *CheckChanges) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckChanges.ProtoReflect.Descriptor instead.
func (*CheckChanges) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{35}
}

type EnsurePackages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Install bool  `protobuf:"varint,1,opt,name=install,proto3" json:"install,omitempty"`
	File    *File `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *EnsurePackages) Reset() {
	*x = EnsurePackages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnsurePackages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnsurePackages) ProtoMessage() {}

func (x *EnsurePackages) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnsurePackages.ProtoReflect.Descriptor instead.
func (*EnsurePackages) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{36}
}

func (x *EnsurePackages) GetInstall() bool {
	if x != nil {
		return x.Install
	}
	return false
}

func (x *EnsurePackages) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

type Start struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Start) Reset() {
	*x = Start{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Start) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Start) ProtoMessage() {}

func (x *Start) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Start.ProtoReflect.Descriptor instead.
func (*Start) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{37}
}

type DebugStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Done  bool          `protobuf:"varint,1,opt,name=done,proto3" json:"done,omitempty"`
	Stack []*StackFrame `protobuf:"bytes,2,rep,name=stack,proto3" json:"stack,omitempty"`
}

func (x *DebugStatus) Reset() {
	*x = DebugStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugStatus) ProtoMessage() {}

func (x *DebugStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugStatus.ProtoReflect.Descriptor instead.
func (*DebugStatus) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{38}
}

func (x *DebugStatus) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

func (x *DebugStatus) GetStack() []*StackFrame {
	if x != nil {
		return x.Stack
	}
	return nil
}

type StackFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Function string `protobuf:"bytes,1,opt,name=function,proto3" json:"function,omitempty"`
	Line     uint32 `protobuf:"varint,2,opt,name=line,proto3" json:"line,omitempty"`
}

func (x *StackFrame) Reset() {
	*x = StackFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StackFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StackFrame) ProtoMessage() {}

func (x *StackFrame) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StackFrame.ProtoReflect.Descriptor instead.
func (*StackFrame) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{39}
}

func (x *StackFrame) GetFunction() string {
	if x != nil {
		return x.Function
	}
	return ""
}

func (x *StackFrame) GetLine() uint32 {
	if x != nil {
		return x.Line
	}
	return 0
}

type ContainedTest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Suite   *File   `protobuf:"bytes,1,opt,name=suite,proto3" json:"suite,omitempty"`
	Project []*File `protobuf:"bytes,2,rep,name=project,proto3" json:"project,omitempty"`
}

func (x *ContainedTest) Reset() {
	*x = ContainedTest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainedTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainedTest) ProtoMessage() {}

func (x *ContainedTest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainedTest.ProtoReflect.Descriptor instead.
func (*ContainedTest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{40}
}

func (x *ContainedTest) GetSuite() *File {
	if x != nil {
		return x.Suite
	}
	return nil
}

func (x *ContainedTest) GetProject() []*File {
	if x != nil {
		return x.Project
	}
	return nil
}

type TestResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passed bool           `protobuf:"varint,1,opt,name=passed,proto3" json:"passed,omitempty"`
	Stderr string         `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	Fails  []*TestFailure `protobuf:"bytes,3,rep,name=fails,proto3" json:"fails,omitempty"`
}

func (x *TestResult) Reset() {
	*x = TestResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestResult) ProtoMessage() {}

func (x *TestResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestResult.ProtoReflect.Descriptor instead.
func (*TestResult) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{41}
}

func (x *TestResult) GetPassed() bool {
	if x != nil {
		return x.Passed
	}
	return false
}

func (x *TestResult) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

func (x *TestResult) GetFails() []*TestFailure {
	if x != nil {
		return x.Fails
	}
	return nil
}

type TestFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Trace string `protobuf:"bytes,2,opt,name=trace,proto3" json:"trace,omitempty"`
}

func (x *TestFailure) Reset() {
	*x = TestFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestFailure) ProtoMessage() {}

func (x *TestFailure) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestFailure.ProtoReflect.Descriptor instead.
func (*TestFailure) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{42}
}

func (x *TestFailure) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TestFailure) GetTrace() string {
	if x != nil {
		return x.Trace
	}
	return ""
}

type ResizeTerm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows uint32 `protobuf:"varint,1,opt,name=rows,proto3" json:"rows,omitempty"`
	Cols uint32 `protobuf:"varint,2,opt,name=cols,proto3" json:"cols,omitempty"`
}

func (x *ResizeTerm) Reset() {
	*x = ResizeTerm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResizeTerm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResizeTerm) ProtoMessage() {}

func (x *ResizeTerm) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResizeTerm.ProtoReflect.Descriptor instead.
func (*ResizeTerm) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{43}
}

func (x *ResizeTerm) GetRows() uint32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

func (x *ResizeTerm) GetCols() uint32 {
	if x != nil {
		return x.Cols
	}
	return 0
}

type SaneTerm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SaneTerm) Reset() {
	*x = SaneTerm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaneTerm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaneTerm) ProtoMessage() {}

func (x *SaneTerm) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaneTerm.ProtoReflect.Descriptor instead.
func (*SaneTerm) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{44}
}

type LintResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*LintResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *LintResults) Reset() {
	*x = LintResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LintResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LintResults) ProtoMessage() {}

func (x *LintResults) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LintResults.ProtoReflect.Descriptor instead.
func (*LintResults) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{45}
}

func (x *LintResults) GetResults() []*LintResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type LintResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text   string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Row    int32  `protobuf:"varint,2,opt,name=row,proto3" json:"row,omitempty"`
	Column int32  `protobuf:"varint,3,opt,name=column,proto3" json:"column,omitempty"`
	Type   string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *LintResult) Reset() {
	*x = LintResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LintResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LintResult) ProtoMessage() {}

func (x *LintResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LintResult.ProtoReflect.Descriptor instead.
func (*LintResult) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{46}
}

func (x *LintResult) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *LintResult) GetRow() int32 {
	if x != nil {
		return x.Row
	}
	return 0
}

func (x *LintResult) GetColumn() int32 {
	if x != nil {
		return x.Column
	}
	return 0
}

func (x *LintResult) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type OK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OK) Reset() {
	*x = OK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OK) ProtoMessage() {}

func (x *OK) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OK.ProtoReflect.Descriptor instead.
func (*OK) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{47}
}

type Move struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldPath string `protobuf:"bytes,1,opt,name=oldPath,proto3" json:"oldPath,omitempty"`
	NewPath string `protobuf:"bytes,2,opt,name=newPath,proto3" json:"newPath,omitempty"`
}

func (x *Move) Reset() {
	*x = Move{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Move) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Move) ProtoMessage() {}

func (x *Move) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Move.ProtoReflect.Descriptor instead.
func (*Move) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{48}
}

func (x *Move) GetOldPath() string {
	if x != nil {
		return x.OldPath
	}
	return ""
}

func (x *Move) GetNewPath() string {
	if x != nil {
		return x.NewPath
	}
	return ""
}

type Files struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*File `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *Files) Reset() {
	*x = Files{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Files) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Files) ProtoMessage() {}

func (x *Files) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Files.ProtoReflect.Descriptor instead.
func (*Files) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{49}
}

func (x *Files) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

type StatResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists   bool      `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	Type     File_Type `protobuf:"varint,2,opt,name=type,proto3,enum=api.File_Type" json:"type,omitempty"`
	Size     int64     `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	FileMode string    `protobuf:"bytes,4,opt,name=fileMode,proto3" json:"fileMode,omitempty"`
	ModTime  int64     `protobuf:"varint,5,opt,name=modTime,proto3" json:"modTime,omitempty"`
}

func (x *StatResult) Reset() {
	*x = StatResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatResult) ProtoMessage() {}

func (x *StatResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatResult.ProtoReflect.Descriptor instead.
func (*StatResult) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{50}
}

func (x *StatResult) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

func (x *StatResult) GetType() File_Type {
	if x != nil {
		return x.Type
	}
	return File_REGULAR
}

func (x *StatResult) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *StatResult) GetFileMode() string {
	if x != nil {
		return x.FileMode
	}
	return ""
}

func (x *StatResult) GetModTime() int64 {
	if x != nil {
		return x.ModTime
	}
	return 0
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path    string    `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Type    File_Type `protobuf:"varint,2,opt,name=type,proto3,enum=api.File_Type" json:"type,omitempty"`
	Content []byte    `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{51}
}

func (x *File) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *File) GetType() File_Type {
	if x != nil {
		return x.Type
	}
	return File_REGULAR
}

func (x *File) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type Clear struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Clear) Reset() {
	*x = Clear{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Clear) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Clear) ProtoMessage() {}

func (x *Clear) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Clear.ProtoReflect.Descriptor instead.
func (*Clear) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{52}
}

type Toast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Toast) Reset() {
	*x = Toast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Toast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Toast) ProtoMessage() {}

func (x *Toast) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Toast.ProtoReflect.Descriptor instead.
func (*Toast) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{53}
}

func (x *Toast) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// Redirect indicates that a client should attempt to connect through another
// URL. This is needed since most browser WebSockets implementations do not
// support following standard HTTP redirects.
type Redirect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The URL to try again. If empty, the negotiation to figure out the URL for
	// a repl needs to start from scratch.
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Redirect) Reset() {
	*x = Redirect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Redirect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Redirect) ProtoMessage() {}

func (x *Redirect) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Redirect.ProtoReflect.Descriptor instead.
func (*Redirect) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{54}
}

func (x *Redirect) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// AlwaysOn tells conman that always on should be enabled or disabled.
type AlwaysOn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable bool `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *AlwaysOn) Reset() {
	*x = AlwaysOn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlwaysOn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlwaysOn) ProtoMessage() {}

func (x *AlwaysOn) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlwaysOn.ProtoReflect.Descriptor instead.
func (*AlwaysOn) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{55}
}

func (x *AlwaysOn) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type RunMain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunMain) Reset() {
	*x = RunMain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunMain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunMain) ProtoMessage() {}

func (x *RunMain) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunMain.ProtoReflect.Descriptor instead.
func (*RunMain) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{56}
}

type OpenChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service string             `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Name    string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Action  OpenChannel_Action `protobuf:"varint,3,opt,name=action,proto3,enum=api.OpenChannel_Action" json:"action,omitempty"`
	Id      int32              `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *OpenChannel) Reset() {
	*x = OpenChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenChannel) ProtoMessage() {}

func (x *OpenChannel) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenChannel.ProtoReflect.Descriptor instead.
func (*OpenChannel) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{57}
}

func (x *OpenChannel) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *OpenChannel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OpenChannel) GetAction() OpenChannel_Action {
	if x != nil {
		return x.Action
	}
	return OpenChannel_CREATE
}

func (x *OpenChannel) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type OpenChannelRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	State OpenChannelRes_State `protobuf:"varint,2,opt,name=state,proto3,enum=api.OpenChannelRes_State" json:"state,omitempty"`
	Error string               `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *OpenChannelRes) Reset() {
	*x = OpenChannelRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenChannelRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenChannelRes) ProtoMessage() {}

func (x *OpenChannelRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenChannelRes.ProtoReflect.Descriptor instead.
func (*OpenChannelRes) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{58}
}

func (x *OpenChannelRes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OpenChannelRes) GetState() OpenChannelRes_State {
	if x != nil {
		return x.State
	}
	return OpenChannelRes_CREATED
}

func (x *OpenChannelRes) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CloseChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Action CloseChannel_Action `protobuf:"varint,2,opt,name=action,proto3,enum=api.CloseChannel_Action" json:"action,omitempty"`
}

func (x *CloseChannel) Reset() {
	*x = CloseChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseChannel) ProtoMessage() {}

func (x *CloseChannel) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseChannel.ProtoReflect.Descriptor instead.
func (*CloseChannel) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{59}
}

func (x *CloseChannel) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CloseChannel) GetAction() CloseChannel_Action {
	if x != nil {
		return x.Action
	}
	return CloseChannel_DISCONNECT
}

type CloseChannelRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status CloseChannelRes_Status `protobuf:"varint,2,opt,name=status,proto3,enum=api.CloseChannelRes_Status" json:"status,omitempty"`
}

func (x *CloseChannelRes) Reset() {
	*x = CloseChannelRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseChannelRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseChannelRes) ProtoMessage() {}

func (x *CloseChannelRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseChannelRes.ProtoReflect.Descriptor instead.
func (*CloseChannelRes) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{60}
}

func (x *CloseChannelRes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CloseChannelRes) GetStatus() CloseChannelRes_Status {
	if x != nil {
		return x.Status
	}
	return CloseChannelRes_DISCONNECT
}

type ContainerState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State ContainerState_State `protobuf:"varint,1,opt,name=state,proto3,enum=api.ContainerState_State" json:"state,omitempty"`
}

func (x *ContainerState) Reset() {
	*x = ContainerState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerState) ProtoMessage() {}

func (x *ContainerState) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerState.ProtoReflect.Descriptor instead.
func (*ContainerState) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{61}
}

func (x *ContainerState) GetState() ContainerState_State {
	if x != nil {
		return x.State
	}
	return ContainerState_SLEEP
}

type PortOpen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Forwarded bool   `protobuf:"varint,1,opt,name=forwarded,proto3" json:"forwarded,omitempty"`
	Port      uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Address   string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *PortOpen) Reset() {
	*x = PortOpen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortOpen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortOpen) ProtoMessage() {}

func (x *PortOpen) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortOpen.ProtoReflect.Descriptor instead.
func (*PortOpen) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{62}
}

func (x *PortOpen) GetForwarded() bool {
	if x != nil {
		return x.Forwarded
	}
	return false
}

func (x *PortOpen) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *PortOpen) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type OTFetchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionFrom uint32 `protobuf:"varint,1,opt,name=versionFrom,proto3" json:"versionFrom,omitempty"`
	VersionTo   uint32 `protobuf:"varint,2,opt,name=versionTo,proto3" json:"versionTo,omitempty"`
}

func (x *OTFetchRequest) Reset() {
	*x = OTFetchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTFetchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTFetchRequest) ProtoMessage() {}

func (x *OTFetchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTFetchRequest.ProtoReflect.Descriptor instead.
func (*OTFetchRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{63}
}

func (x *OTFetchRequest) GetVersionFrom() uint32 {
	if x != nil {
		return x.VersionFrom
	}
	return 0
}

func (x *OTFetchRequest) GetVersionTo() uint32 {
	if x != nil {
		return x.VersionTo
	}
	return 0
}

type OTFetchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packets []*OTPacket `protobuf:"bytes,1,rep,name=packets,proto3" json:"packets,omitempty"`
}

func (x *OTFetchResponse) Reset() {
	*x = OTFetchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTFetchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTFetchResponse) ProtoMessage() {}

func (x *OTFetchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTFetchResponse.ProtoReflect.Descriptor instead.
func (*OTFetchResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{64}
}

func (x *OTFetchResponse) GetPackets() []*OTPacket {
	if x != nil {
		return x.Packets
	}
	return nil
}

type OTPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// so here's the deal. Once uppon a time `spookyVersion` was `version` and things
	// worked okay. Then one day someone came along and decided our handling of
	// version 0 was all kinds of messed up. Sending a version that already existed
	// never transformed the packet by that particular version. It was as if
	// `version` was treated as `version + 1`. This could not stand and thus the
	// great rift of versions was created. `version` does the right thing and
	// `spookyVersion` maintains backwards compatibility.
	SpookyVersion uint32                 `protobuf:"varint,1,opt,name=spookyVersion,proto3" json:"spookyVersion,omitempty"`
	Version       uint32                 `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
	Ops           []*OTRuneTransformOp   `protobuf:"bytes,2,rep,name=ops,proto3" json:"ops,omitempty"`
	Crc32         uint32                 `protobuf:"varint,3,opt,name=crc32,proto3" json:"crc32,omitempty"`
	Committed     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=committed,proto3" json:"committed,omitempty"`
	Nonce         uint32                 `protobuf:"varint,6,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *OTPacket) Reset() {
	*x = OTPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTPacket) ProtoMessage() {}

func (x *OTPacket) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTPacket.ProtoReflect.Descriptor instead.
func (*OTPacket) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{65}
}

func (x *OTPacket) GetSpookyVersion() uint32 {
	if x != nil {
		return x.SpookyVersion
	}
	return 0
}

func (x *OTPacket) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *OTPacket) GetOps() []*OTRuneTransformOp {
	if x != nil {
		return x.Ops
	}
	return nil
}

func (x *OTPacket) GetCrc32() uint32 {
	if x != nil {
		return x.Crc32
	}
	return 0
}

func (x *OTPacket) GetCommitted() *timestamppb.Timestamp {
	if x != nil {
		return x.Committed
	}
	return nil
}

func (x *OTPacket) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

type OTRuneTransformOp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Op:
	//	*OTRuneTransformOp_Skip
	//	*OTRuneTransformOp_Delete
	//	*OTRuneTransformOp_Insert
	Op isOTRuneTransformOp_Op `protobuf_oneof:"op"`
}

func (x *OTRuneTransformOp) Reset() {
	*x = OTRuneTransformOp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTRuneTransformOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTRuneTransformOp) ProtoMessage() {}

func (x *OTRuneTransformOp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTRuneTransformOp.ProtoReflect.Descriptor instead.
func (*OTRuneTransformOp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{66}
}

func (m *OTRuneTransformOp) GetOp() isOTRuneTransformOp_Op {
	if m != nil {
		return m.Op
	}
	return nil
}

func (x *OTRuneTransformOp) GetSkip() uint32 {
	if x, ok := x.GetOp().(*OTRuneTransformOp_Skip); ok {
		return x.Skip
	}
	return 0
}

func (x *OTRuneTransformOp) GetDelete() uint32 {
	if x, ok := x.GetOp().(*OTRuneTransformOp_Delete); ok {
		return x.Delete
	}
	return 0
}

func (x *OTRuneTransformOp) GetInsert() string {
	if x, ok := x.GetOp().(*OTRuneTransformOp_Insert); ok {
		return x.Insert
	}
	return ""
}

type isOTRuneTransformOp_Op interface {
	isOTRuneTransformOp_Op()
}

type OTRuneTransformOp_Skip struct {
	Skip uint32 `protobuf:"varint,1,opt,name=skip,proto3,oneof"`
}

type OTRuneTransformOp_Delete struct {
	Delete uint32 `protobuf:"varint,2,opt,name=delete,proto3,oneof"`
}

type OTRuneTransformOp_Insert struct {
	Insert string `protobuf:"bytes,3,opt,name=insert,proto3,oneof"`
}

func (*OTRuneTransformOp_Skip) isOTRuneTransformOp_Op() {}

func (*OTRuneTransformOp_Delete) isOTRuneTransformOp_Op() {}

func (*OTRuneTransformOp_Insert) isOTRuneTransformOp_Op() {}

type OTStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contents   string      `protobuf:"bytes,1,opt,name=contents,proto3" json:"contents,omitempty"`
	Version    uint32      `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	LinkedFile *File       `protobuf:"bytes,3,opt,name=linkedFile,proto3" json:"linkedFile,omitempty"`
	Cursors    []*OTCursor `protobuf:"bytes,4,rep,name=cursors,proto3" json:"cursors,omitempty"`
}

func (x *OTStatus) Reset() {
	*x = OTStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTStatus) ProtoMessage() {}

func (x *OTStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTStatus.ProtoReflect.Descriptor instead.
func (*OTStatus) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{67}
}

func (x *OTStatus) GetContents() string {
	if x != nil {
		return x.Contents
	}
	return ""
}

func (x *OTStatus) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *OTStatus) GetLinkedFile() *File {
	if x != nil {
		return x.LinkedFile
	}
	return nil
}

func (x *OTStatus) GetCursors() []*OTCursor {
	if x != nil {
		return x.Cursors
	}
	return nil
}

type OTCursor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position       uint32 `protobuf:"varint,1,opt,name=position,proto3" json:"position,omitempty"`
	SelectionStart uint32 `protobuf:"varint,2,opt,name=selectionStart,proto3" json:"selectionStart,omitempty"`
	SelectionEnd   uint32 `protobuf:"varint,3,opt,name=selectionEnd,proto3" json:"selectionEnd,omitempty"`
	User           *User  `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	Id             string `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *OTCursor) Reset() {
	*x = OTCursor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTCursor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTCursor) ProtoMessage() {}

func (x *OTCursor) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTCursor.ProtoReflect.Descriptor instead.
func (*OTCursor) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{68}
}

func (x *OTCursor) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *OTCursor) GetSelectionStart() uint32 {
	if x != nil {
		return x.SelectionStart
	}
	return 0
}

func (x *OTCursor) GetSelectionEnd() uint32 {
	if x != nil {
		return x.SelectionEnd
	}
	return 0
}

func (x *OTCursor) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *OTCursor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ChatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Text     string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{69}
}

func (x *ChatMessage) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ChatMessage) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type ChatTyping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Typing   bool   `protobuf:"varint,2,opt,name=typing,proto3" json:"typing,omitempty"`
}

func (x *ChatTyping) Reset() {
	*x = ChatTyping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTyping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTyping) ProtoMessage() {}

func (x *ChatTyping) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTyping.ProtoReflect.Descriptor instead.
func (*ChatTyping) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{70}
}

func (x *ChatTyping) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ChatTyping) GetTyping() bool {
	if x != nil {
		return x.Typing
	}
	return false
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Roles   []string `protobuf:"bytes,3,rep,name=roles,proto3" json:"roles,omitempty"`
	Session int32    `protobuf:"varint,4,opt,name=session,proto3" json:"session,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{71}
}

func (x *User) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *User) GetSession() int32 {
	if x != nil {
		return x.Session
	}
	return 0
}

type Roster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User []*User `protobuf:"bytes,1,rep,name=user,proto3" json:"user,omitempty"`
}

func (x *Roster) Reset() {
	*x = Roster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Roster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Roster) ProtoMessage() {}

func (x *Roster) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Roster.ProtoReflect.Descriptor instead.
func (*Roster) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{72}
}

func (x *Roster) GetUser() []*User {
	if x != nil {
		return x.User
	}
	return nil
}

type Exec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Args     []string          `protobuf:"bytes,1,rep,name=args,proto3" json:"args,omitempty"`
	Env      map[string]string `protobuf:"bytes,2,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Blocking bool              `protobuf:"varint,3,opt,name=blocking,proto3" json:"blocking,omitempty"`
}

func (x *Exec) Reset() {
	*x = Exec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Exec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exec) ProtoMessage() {}

func (x *Exec) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Exec.ProtoReflect.Descriptor instead.
func (*Exec) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{73}
}

func (x *Exec) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Exec) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *Exec) GetBlocking() bool {
	if x != nil {
		return x.Blocking
	}
	return false
}

type Package struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Used always.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Used only for add and remove.
	Spec string `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	// Used only for search and info.
	Description      string     `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	Version          string     `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	HomepageURL      string     `protobuf:"bytes,12,opt,name=homepageURL,proto3" json:"homepageURL,omitempty"`
	DocumentationURL string     `protobuf:"bytes,13,opt,name=documentationURL,proto3" json:"documentationURL,omitempty"`
	SourceCodeURL    string     `protobuf:"bytes,14,opt,name=sourceCodeURL,proto3" json:"sourceCodeURL,omitempty"`
	BugTrackerURL    string     `protobuf:"bytes,15,opt,name=bugTrackerURL,proto3" json:"bugTrackerURL,omitempty"`
	Author           string     `protobuf:"bytes,16,opt,name=author,proto3" json:"author,omitempty"`
	License          string     `protobuf:"bytes,17,opt,name=license,proto3" json:"license,omitempty"`
	Dependencies     []*Package `protobuf:"bytes,18,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
}

func (x *Package) Reset() {
	*x = Package{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Package) ProtoMessage() {}

func (x *Package) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Package.ProtoReflect.Descriptor instead.
func (*Package) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{74}
}

func (x *Package) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Package) GetSpec() string {
	if x != nil {
		return x.Spec
	}
	return ""
}

func (x *Package) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Package) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Package) GetHomepageURL() string {
	if x != nil {
		return x.HomepageURL
	}
	return ""
}

func (x *Package) GetDocumentationURL() string {
	if x != nil {
		return x.DocumentationURL
	}
	return ""
}

func (x *Package) GetSourceCodeURL() string {
	if x != nil {
		return x.SourceCodeURL
	}
	return ""
}

func (x *Package) GetBugTrackerURL() string {
	if x != nil {
		return x.BugTrackerURL
	}
	return ""
}

func (x *Package) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Package) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *Package) GetDependencies() []*Package {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

type PackageSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *PackageSearch) Reset() {
	*x = PackageSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageSearch) ProtoMessage() {}

func (x *PackageSearch) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageSearch.ProtoReflect.Descriptor instead.
func (*PackageSearch) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{75}
}

func (x *PackageSearch) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type PackageSearchResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*Package `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *PackageSearchResp) Reset() {
	*x = PackageSearchResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageSearchResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageSearchResp) ProtoMessage() {}

func (x *PackageSearchResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageSearchResp.ProtoReflect.Descriptor instead.
func (*PackageSearchResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{76}
}

func (x *PackageSearchResp) GetResults() []*Package {
	if x != nil {
		return x.Results
	}
	return nil
}

type PackageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pkg *Package `protobuf:"bytes,1,opt,name=pkg,proto3" json:"pkg,omitempty"`
}

func (x *PackageInfo) Reset() {
	*x = PackageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageInfo) ProtoMessage() {}

func (x *PackageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageInfo.ProtoReflect.Descriptor instead.
func (*PackageInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{77}
}

func (x *PackageInfo) GetPkg() *Package {
	if x != nil {
		return x.Pkg
	}
	return nil
}

type PackageInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pkg *Package `protobuf:"bytes,1,opt,name=pkg,proto3" json:"pkg,omitempty"`
}

func (x *PackageInfoResp) Reset() {
	*x = PackageInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageInfoResp) ProtoMessage() {}

func (x *PackageInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageInfoResp.ProtoReflect.Descriptor instead.
func (*PackageInfoResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{78}
}

func (x *PackageInfoResp) GetPkg() *Package {
	if x != nil {
		return x.Pkg
	}
	return nil
}

type PackageAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pkgs []*Package `protobuf:"bytes,1,rep,name=pkgs,proto3" json:"pkgs,omitempty"`
}

func (x *PackageAdd) Reset() {
	*x = PackageAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageAdd) ProtoMessage() {}

func (x *PackageAdd) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageAdd.ProtoReflect.Descriptor instead.
func (*PackageAdd) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{79}
}

func (x *PackageAdd) GetPkgs() []*Package {
	if x != nil {
		return x.Pkgs
	}
	return nil
}

type PackageRemove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pkgs []*Package `protobuf:"bytes,1,rep,name=pkgs,proto3" json:"pkgs,omitempty"`
}

func (x *PackageRemove) Reset() {
	*x = PackageRemove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageRemove) ProtoMessage() {}

func (x *PackageRemove) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageRemove.ProtoReflect.Descriptor instead.
func (*PackageRemove) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{80}
}

func (x *PackageRemove) GetPkgs() []*Package {
	if x != nil {
		return x.Pkgs
	}
	return nil
}

type PackageInstall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PackageInstall) Reset() {
	*x = PackageInstall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageInstall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageInstall) ProtoMessage() {}

func (x *PackageInstall) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageInstall.ProtoReflect.Descriptor instead.
func (*PackageInstall) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{81}
}

type PackageListSpecfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PackageListSpecfile) Reset() {
	*x = PackageListSpecfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageListSpecfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageListSpecfile) ProtoMessage() {}

func (x *PackageListSpecfile) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageListSpecfile.ProtoReflect.Descriptor instead.
func (*PackageListSpecfile) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{82}
}

type PackageListSpecfileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pkgs []*Package `protobuf:"bytes,1,rep,name=pkgs,proto3" json:"pkgs,omitempty"`
}

func (x *PackageListSpecfileResp) Reset() {
	*x = PackageListSpecfileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageListSpecfileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageListSpecfileResp) ProtoMessage() {}

func (x *PackageListSpecfileResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageListSpecfileResp.ProtoReflect.Descriptor instead.
func (*PackageListSpecfileResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{83}
}

func (x *PackageListSpecfileResp) GetPkgs() []*Package {
	if x != nil {
		return x.Pkgs
	}
	return nil
}

type PackageCacheSave struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PackageCacheSave) Reset() {
	*x = PackageCacheSave{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageCacheSave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageCacheSave) ProtoMessage() {}

func (x *PackageCacheSave) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageCacheSave.ProtoReflect.Descriptor instead.
func (*PackageCacheSave) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{84}
}

type ChatScrollback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scrollback []*ChatMessage `protobuf:"bytes,1,rep,name=scrollback,proto3" json:"scrollback,omitempty"`
}

func (x *ChatScrollback) Reset() {
	*x = ChatScrollback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatScrollback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatScrollback) ProtoMessage() {}

func (x *ChatScrollback) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatScrollback.ProtoReflect.Descriptor instead.
func (*ChatScrollback) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{85}
}

func (x *ChatScrollback) GetScrollback() []*ChatMessage {
	if x != nil {
		return x.Scrollback
	}
	return nil
}

type Metrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrometheusMetricFamilies [][]byte `protobuf:"bytes,1,rep,name=prometheusMetricFamilies,proto3" json:"prometheusMetricFamilies,omitempty"`
}

func (x *Metrics) Reset() {
	*x = Metrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metrics) ProtoMessage() {}

func (x *Metrics) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metrics.ProtoReflect.Descriptor instead.
func (*Metrics) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{86}
}

func (x *Metrics) GetPrometheusMetricFamilies() [][]byte {
	if x != nil {
		return x.PrometheusMetricFamilies
	}
	return nil
}

type PprofRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Body:
	//	*PprofRequest_PprofCpuProfileRequest
	//	*PprofRequest_PprofHeapProfileRequest
	//	*PprofRequest_PprofAllocsProfileRequest
	//	*PprofRequest_PprofBlockProfileRequest
	//	*PprofRequest_PprofMutexProfileRequest
	Body isPprofRequest_Body `protobuf_oneof:"body"`
}

func (x *PprofRequest) Reset() {
	*x = PprofRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PprofRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PprofRequest) ProtoMessage() {}

func (x *PprofRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PprofRequest.ProtoReflect.Descriptor instead.
func (*PprofRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{87}
}

func (x *PprofRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *PprofRequest) GetBody() isPprofRequest_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *PprofRequest) GetPprofCpuProfileRequest() *PprofCpuProfileRequest {
	if x, ok := x.GetBody().(*PprofRequest_PprofCpuProfileRequest); ok {
		return x.PprofCpuProfileRequest
	}
	return nil
}

func (x *PprofRequest) GetPprofHeapProfileRequest() *PprofHeapProfileRequest {
	if x, ok := x.GetBody().(*PprofRequest_PprofHeapProfileRequest); ok {
		return x.PprofHeapProfileRequest
	}
	return nil
}

func (x *PprofRequest) GetPprofAllocsProfileRequest() *PprofAllocsProfileRequest {
	if x, ok := x.GetBody().(*PprofRequest_PprofAllocsProfileRequest); ok {
		return x.PprofAllocsProfileRequest
	}
	return nil
}

func (x *PprofRequest) GetPprofBlockProfileRequest() *PprofBlockProfileRequest {
	if x, ok := x.GetBody().(*PprofRequest_PprofBlockProfileRequest); ok {
		return x.PprofBlockProfileRequest
	}
	return nil
}

func (x *PprofRequest) GetPprofMutexProfileRequest() *PprofMutexProfileRequest {
	if x, ok := x.GetBody().(*PprofRequest_PprofMutexProfileRequest); ok {
		return x.PprofMutexProfileRequest
	}
	return nil
}

type isPprofRequest_Body interface {
	isPprofRequest_Body()
}

type PprofRequest_PprofCpuProfileRequest struct {
	PprofCpuProfileRequest *PprofCpuProfileRequest `protobuf:"bytes,2,opt,name=pprofCpuProfileRequest,proto3,oneof"`
}

type PprofRequest_PprofHeapProfileRequest struct {
	PprofHeapProfileRequest *PprofHeapProfileRequest `protobuf:"bytes,3,opt,name=pprofHeapProfileRequest,proto3,oneof"`
}

type PprofRequest_PprofAllocsProfileRequest struct {
	PprofAllocsProfileRequest *PprofAllocsProfileRequest `protobuf:"bytes,4,opt,name=pprofAllocsProfileRequest,proto3,oneof"`
}

type PprofRequest_PprofBlockProfileRequest struct {
	PprofBlockProfileRequest *PprofBlockProfileRequest `protobuf:"bytes,5,opt,name=pprofBlockProfileRequest,proto3,oneof"`
}

type PprofRequest_PprofMutexProfileRequest struct {
	PprofMutexProfileRequest *PprofMutexProfileRequest `protobuf:"bytes,6,opt,name=pprofMutexProfileRequest,proto3,oneof"`
}

func (*PprofRequest_PprofCpuProfileRequest) isPprofRequest_Body() {}

func (*PprofRequest_PprofHeapProfileRequest) isPprofRequest_Body() {}

func (*PprofRequest_PprofAllocsProfileRequest) isPprofRequest_Body() {}

func (*PprofRequest_PprofBlockProfileRequest) isPprofRequest_Body() {}

func (*PprofRequest_PprofMutexProfileRequest) isPprofRequest_Body() {}

type PprofAllocsProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Debug bool `protobuf:"varint,1,opt,name=debug,proto3" json:"debug,omitempty"`
}

func (x *PprofAllocsProfileRequest) Reset() {
	*x = PprofAllocsProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PprofAllocsProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PprofAllocsProfileRequest) ProtoMessage() {}

func (x *PprofAllocsProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PprofAllocsProfileRequest.ProtoReflect.Descriptor instead.
func (*PprofAllocsProfileRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{88}
}

func (x *PprofAllocsProfileRequest) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

type PprofBlockProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Debug bool `protobuf:"varint,1,opt,name=debug,proto3" json:"debug,omitempty"`
}

func (x *PprofBlockProfileRequest) Reset() {
	*x = PprofBlockProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PprofBlockProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PprofBlockProfileRequest) ProtoMessage() {}

func (x *PprofBlockProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PprofBlockProfileRequest.ProtoReflect.Descriptor instead.
func (*PprofBlockProfileRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{89}
}

func (x *PprofBlockProfileRequest) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

type PprofCpuProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seconds int64 `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
}

func (x *PprofCpuProfileRequest) Reset() {
	*x = PprofCpuProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PprofCpuProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PprofCpuProfileRequest) ProtoMessage() {}

func (x *PprofCpuProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PprofCpuProfileRequest.ProtoReflect.Descriptor instead.
func (*PprofCpuProfileRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{90}
}

func (x *PprofCpuProfileRequest) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

type PprofHeapProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gc    bool `protobuf:"varint,1,opt,name=gc,proto3" json:"gc,omitempty"`
	Debug bool `protobuf:"varint,2,opt,name=debug,proto3" json:"debug,omitempty"`
}

func (x *PprofHeapProfileRequest) Reset() {
	*x = PprofHeapProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PprofHeapProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PprofHeapProfileRequest) ProtoMessage() {}

func (x *PprofHeapProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PprofHeapProfileRequest.ProtoReflect.Descriptor instead.
func (*PprofHeapProfileRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{91}
}

func (x *PprofHeapProfileRequest) GetGc() bool {
	if x != nil {
		return x.Gc
	}
	return false
}

func (x *PprofHeapProfileRequest) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

type PprofMutexProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Debug bool `protobuf:"varint,1,opt,name=debug,proto3" json:"debug,omitempty"`
}

func (x *PprofMutexProfileRequest) Reset() {
	*x = PprofMutexProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PprofMutexProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PprofMutexProfileRequest) ProtoMessage() {}

func (x *PprofMutexProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PprofMutexProfileRequest.ProtoReflect.Descriptor instead.
func (*PprofMutexProfileRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{92}
}

func (x *PprofMutexProfileRequest) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

type PprofResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Profile []byte `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *PprofResponse) Reset() {
	*x = PprofResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PprofResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PprofResponse) ProtoMessage() {}

func (x *PprofResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PprofResponse.ProtoReflect.Descriptor instead.
func (*PprofResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{93}
}

func (x *PprofResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PprofResponse) GetProfile() []byte {
	if x != nil {
		return x.Profile
	}
	return nil
}

// Message used to configure PTY
type PTYConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether "PipeMode" should be enabled or not
	// PipeMode is the equivelent of stty raw icrnl isig -echo.
	// This is designed for comparing and output - the output
	// should be as close as possible to its original state.
	PipeMode bool `protobuf:"varint,1,opt,name=pipeMode,proto3" json:"pipeMode,omitempty"`
}

func (x *PTYConfig) Reset() {
	*x = PTYConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PTYConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PTYConfig) ProtoMessage() {}

func (x *PTYConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PTYConfig.ProtoReflect.Descriptor instead.
func (*PTYConfig) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{94}
}

func (x *PTYConfig) GetPipeMode() bool {
	if x != nil {
		return x.PipeMode
	}
	return false
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xaf, 0x27, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x2e, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x43, 0x68, 0x61,
	0x6e, 0x12, 0x37, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x52, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x6f,
	0x70, 0x65, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x09, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x48, 0x00, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x12, 0x3a, 0x0a,
	0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x6f, 0x72, 0x74,
	0x4f, 0x70, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x50, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6f, 0x72,
	0x74, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x6f, 0x61, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x08, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x2b, 0x0a, 0x08, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73,
	0x4f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x6c, 0x77, 0x61, 0x79, 0x73, 0x4f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x61, 0x6c, 0x77, 0x61, 0x79,
	0x73, 0x4f, 0x6e, 0x12, 0x28, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x4d, 0x61, 0x69, 0x6e, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x75, 0x6e, 0x4d, 0x61,
	0x69, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x4d, 0x61, 0x69, 0x6e, 0x12, 0x22, 0x0a,
	0x05, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x48, 0x00, 0x52, 0x05, 0x63, 0x6c, 0x65, 0x61,
	0x72, 0x12, 0x14, 0x0a, 0x04, 0x65, 0x76, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x65, 0x76, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x16, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x06, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x08, 0x73,
	0x61, 0x6e, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x61, 0x6e, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x48, 0x00, 0x52, 0x08,
	0x73, 0x61, 0x6e, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x31, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x69,
	0x7a, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x48, 0x00, 0x52,
	0x0a, 0x72, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x22, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x19, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4f, 0x4b, 0x48, 0x00, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x25, 0x0a, 0x07, 0x70, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x07, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73,
	0x74, 0x12, 0x31, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x4d, 0x69,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00,
	0x52, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x1f, 0x0a, 0x04,
	0x6d, 0x6f, 0x76, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x29, 0x0a,
	0x09, 0x74, 0x72, 0x79, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x09, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x6d, 0x6b, 0x64, 0x69,
	0x72, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x48, 0x00, 0x52, 0x05, 0x6d, 0x6b, 0x64, 0x69, 0x72, 0x12, 0x20, 0x0a, 0x04, 0x73,
	0x74, 0x61, 0x74, 0x18, 0xf0, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x2c, 0x0a,
	0x07, 0x73, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x18, 0xf1, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x48, 0x00, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x72,
	0x65, 0x61, 0x64, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x04, 0x72, 0x65, 0x61, 0x64, 0x12, 0x25, 0x0a, 0x07,
	0x72, 0x65, 0x61, 0x64, 0x64, 0x69, 0x72, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x61, 0x64,
	0x64, 0x69, 0x72, 0x12, 0x22, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x26, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x48, 0x00,
	0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x48, 0x00, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x12, 0x30, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x0b, 0x6c, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x6c, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x40, 0x0a, 0x10, 0x72, 0x75, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x54, 0x65, 0x73, 0x74, 0x18, 0x46, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x64, 0x54, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x72, 0x75, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x54, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x74,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x47, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x48, 0x00, 0x52, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26,
	0x0a, 0x0d, 0x64, 0x65, 0x62, 0x75, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x5a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x65, 0x62, 0x75, 0x67, 0x67, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x32, 0x0a, 0x0c, 0x64, 0x65, 0x62, 0x75, 0x67, 0x67,
	0x65, 0x72, 0x53, 0x74, 0x65, 0x70, 0x18, 0x5b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x75, 0x6e, 0x4d, 0x61, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x65, 0x70, 0x12, 0x3a, 0x0a, 0x0e, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x5c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x67, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x65, 0x6e, 0x73, 0x75, 0x72, 0x65,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x65, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x78, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x79,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x48,
	0x00, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x05, 0x68, 0x65, 0x6c, 0x6c, 0x6f,
	0x18, 0x7a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x6c,
	0x6c, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x28, 0x0a, 0x07, 0x67,
	0x6f, 0x6f, 0x64, 0x62, 0x79, 0x65, 0x18, 0x7b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x62, 0x79, 0x65, 0x48, 0x00, 0x52, 0x07, 0x67, 0x6f,
	0x6f, 0x64, 0x62, 0x79, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x82, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x69, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x18, 0x96, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x73, 0x65, 0x6e, 0x64, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x04,
	0x73, 0x65, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x72, 0x65, 0x63, 0x76, 0x18, 0x98, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x63, 0x76, 0x48, 0x00,
	0x52, 0x04, 0x72, 0x65, 0x63, 0x76, 0x12, 0x32, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x18, 0x99, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0a,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x66, 0x69,
	0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x48, 0x00, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x71, 0x12, 0x35, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x66, 0x69, 0x6c,
	0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x6c,
	0x69, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x18, 0xca, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x46,
	0x69, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x10, 0x6d, 0x75,
	0x74, 0x6c, 0x69, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x12, 0x35,
	0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0xcd, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x41, 0x0a, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x18, 0xce, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x02, 0x6f, 0x74, 0x18, 0xdc,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x54, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x02, 0x6f, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x6f, 0x74,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xdd, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4f, 0x54, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x08,
	0x6f, 0x74, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x6f, 0x74, 0x4c, 0x69,
	0x6e, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x18, 0xde, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4f, 0x54, 0x4c, 0x69, 0x6e, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00,
	0x52, 0x0a, 0x6f, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x0b,
	0x6f, 0x74, 0x4e, 0x65, 0x77, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0xdf, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x54, 0x43, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x74, 0x4e, 0x65, 0x77, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x12, 0x38, 0x0a, 0x0e, 0x6f, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x18, 0xe0, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4f, 0x54, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x3e, 0x0a, 0x0e, 0x6f, 0x74,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xe1, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x54, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x74, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0f, 0x6f, 0x74,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xe2, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x54, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x6f, 0x74,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a,
	0x05, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x18, 0xfb, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6c, 0x75,
	0x73, 0x68, 0x12, 0x23, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x18, 0xe6, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x48, 0x00,
	0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x12, 0x2c, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x56, 0x43, 0x52, 0x18, 0xe7, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x56, 0x43, 0x52, 0x48, 0x00, 0x52, 0x08, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x56, 0x43, 0x52, 0x12, 0x29, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x64, 0x56, 0x43, 0x52,
	0x18, 0xe8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x56, 0x43, 0x52, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x61, 0x64, 0x56, 0x43, 0x52,
	0x12, 0x26, 0x0a, 0x06, 0x56, 0x43, 0x52, 0x4c, 0x6f, 0x67, 0x18, 0xe9, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x43, 0x52, 0x4c, 0x6f, 0x67, 0x48, 0x00,
	0x52, 0x06, 0x56, 0x43, 0x52, 0x4c, 0x6f, 0x67, 0x12, 0x20, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x18, 0xeb, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x48, 0x00, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x2c, 0x0a, 0x08, 0x65, 0x78,
	0x65, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0xf0, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x08,
	0x65, 0x78, 0x65, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x80, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x81, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x84, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x6f,
	0x73, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x20,
	0x0a, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x85, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x48, 0x00, 0x52, 0x04, 0x6a, 0x6f, 0x69, 0x6e,
	0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x72, 0x74, 0x18, 0x86, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x48, 0x00, 0x52, 0x04, 0x70, 0x61,
	0x72, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x65, 0x78, 0x65, 0x63, 0x18, 0x8e, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x48, 0x00, 0x52, 0x04,
	0x65, 0x78, 0x65, 0x63, 0x12, 0x3b, 0x0a, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x98, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x48, 0x00, 0x52, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x47, 0x0a, 0x11, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x18, 0x99, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x11, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0b, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x9a, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x41, 0x0a, 0x0f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x9b, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x41,
	0x64, 0x64, 0x18, 0x9c, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x41, 0x64, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x41, 0x64, 0x64, 0x12, 0x3b, 0x0a, 0x0d, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x9d, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x3e, 0x0a, 0x0e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x18, 0x9e, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x4d, 0x0a, 0x13, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x9f, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52,
	0x13, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x59, 0x0a, 0x17, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18,
	0xa0, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x17, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x44, 0x0a, 0x10, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53,
	0x61, 0x76, 0x65, 0x18, 0xa1, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x61, 0x76,
	0x65, 0x48, 0x00, 0x52, 0x10, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x53, 0x61, 0x76, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0xb6, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x0b, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x18, 0xb7, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x69,
	0x6e, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67,
	0x12, 0x3e, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x18, 0xb8, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x00,
	0x52, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x12, 0x32, 0x0a, 0x0a, 0x66, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0xca,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x53, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x73, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x66, 0x73, 0x54, 0x61, 0x6b, 0x65, 0x4c, 0x6f,
	0x63, 0x6b, 0x18, 0xcb, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x46, 0x53, 0x4c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x73, 0x54, 0x61, 0x6b, 0x65,
	0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x34, 0x0a, 0x0d, 0x66, 0x73, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x18, 0xcc, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x46, 0x53, 0x4c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0d, 0x66, 0x73, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x19, 0x0a, 0x06, 0x68, 0x61,
	0x73, 0x43, 0x61, 0x70, 0x18, 0xcf, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x06, 0x68,
	0x61, 0x73, 0x43, 0x61, 0x70, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x69, 0x64, 0x31, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0xd4, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x50, 0x69, 0x64, 0x31, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x70,
	0x69, 0x64, 0x31, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x29, 0x0a, 0x07, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x18, 0xde, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0xdf, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x42, 0x6f, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x6f,
	0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x64,
	0x4d, 0x65, 0x74, 0x61, 0x18, 0xe8, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65,
	0x61, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x09, 0x77, 0x72, 0x69, 0x74, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x18, 0xe9, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x00, 0x52, 0x09, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x65, 0x6e,
	0x64, 0x4d, 0x65, 0x74, 0x61, 0x18, 0xea, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x00, 0x52,
	0x0a, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x18, 0xeb, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f,
	0x12, 0x38, 0x0a, 0x0c, 0x70, 0x70, 0x72, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0xec, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x70,
	0x72, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x70,
	0x72, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x70, 0x70,
	0x72, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xed, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x70, 0x72, 0x6f, 0x66, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x70, 0x72, 0x6f, 0x66, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f,
	0x32, 0x18, 0xee, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x32, 0x48, 0x00, 0x52, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x32, 0x12,
	0x2f, 0x0a, 0x09, 0x50, 0x54, 0x59, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0xef, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x54, 0x59, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x09, 0x50, 0x54, 0x59, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x11, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x72, 0x65, 0x66, 0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x4a, 0x06, 0x08, 0xfa, 0x01,
	0x10, 0xfb, 0x01, 0x4a, 0x06, 0x08, 0xfc, 0x01, 0x10, 0xfd, 0x01, 0x4a, 0x06, 0x08, 0xfd, 0x01,
	0x10, 0xfe, 0x01, 0x4a, 0x06, 0x08, 0xfe, 0x01, 0x10, 0xff, 0x01, 0x4a, 0x06, 0x08, 0xff, 0x01,
	0x10, 0x80, 0x02, 0x22, 0x1b, 0x0a, 0x05, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x36, 0x0a, 0x06, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x11, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x22, 0x48, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x64,
	0x4d, 0x65, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x31, 0x0a, 0x09, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x32, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd6, 0x01, 0x0a, 0x0a, 0x42, 0x6f,
	0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x6f,
	0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x69, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x0d, 0x0a, 0x09, 0x48, 0x41, 0x4e, 0x44, 0x53, 0x48, 0x41, 0x4b, 0x45, 0x10, 0x00, 0x12,
	0x0d, 0x0a, 0x09, 0x41, 0x43, 0x51, 0x55, 0x49, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05,
	0x50, 0x52, 0x4f, 0x58, 0x59, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x55, 0x4c, 0x4c, 0x5f,
	0x46, 0x49, 0x4c, 0x45, 0x53, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x4f, 0x41, 0x44, 0x5f,
	0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x54, 0x52, 0x59,
	0x10, 0x08, 0x22, 0x9e, 0x01, 0x0a, 0x0a, 0x50, 0x69, 0x64, 0x31, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x77, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x63, 0x77, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12,
	0x2a, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x50, 0x69, 0x64, 0x31, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x6e,
	0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x1a, 0x36, 0x0a, 0x08, 0x45,
	0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x1c, 0x0a, 0x06, 0x46, 0x53, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x0c, 0x0a, 0x0a, 0x46, 0x53, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x22,
	0x30, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x1f, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x22, 0xa0, 0x01, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1d,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x64, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x02, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x70, 0x52, 0x02, 0x6f, 0x70,
	0x22, 0x32, 0x0a, 0x02, 0x4f, 0x70, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x6f, 0x76, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x10, 0x03, 0x22, 0x07, 0x0a, 0x05, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x22, 0x8a, 0x01,
	0x0a, 0x0a, 0x4f, 0x54, 0x4c, 0x69, 0x6e, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x04,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x68,
	0x69, 0x67, 0x68, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x69, 0x67, 0x68, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x33, 0x0a, 0x13, 0x4f, 0x42, 0x53, 0x4f, 0x4c, 0x45, 0x54,
	0x45, 0x5f, 0x75, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x42, 0x02, 0x18, 0x01, 0x52, 0x12, 0x4f, 0x42, 0x53, 0x4f, 0x4c, 0x45, 0x54, 0x45,
	0x55, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x04, 0x41, 0x75,
	0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x22, 0xcf, 0x01, 0x0a, 0x08, 0x56,
	0x43, 0x52, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x35, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56,
	0x43, 0x52, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x64, 0x22, 0x1c,
	0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x06, 0x0a, 0x02, 0x49,
	0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x55, 0x54, 0x10, 0x01, 0x22, 0x0a, 0x0a, 0x08,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x56, 0x43, 0x52, 0x22, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x61, 0x64,
	0x56, 0x43, 0x52, 0x22, 0x4e, 0x0a, 0x06, 0x56, 0x43, 0x52, 0x4c, 0x6f, 0x67, 0x12, 0x1f, 0x0a,
	0x03, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x56, 0x43, 0x52, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x23,
	0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x66,
	0x69, 0x6c, 0x65, 0x22, 0x3c, 0x0a, 0x08, 0x45, 0x78, 0x65, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x22, 0x1b, 0x0a, 0x05, 0x44, 0x65, 0x62, 0x75, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x59,
	0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a,
	0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x7e, 0x0a, 0x10, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a,
	0x03, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x52, 0x03, 0x70, 0x75,
	0x74, 0x12, 0x22, 0x0a, 0x03, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x52, 0x03, 0x64, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x52, 0x03, 0x67, 0x65, 0x74, 0x22, 0x99, 0x01, 0x0a, 0x0b, 0x46, 0x69,
	0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x25, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x2b, 0x0a, 0x0f,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x22, 0x0a, 0x0a, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x1a, 0x0a,
	0x04, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x75, 0x66, 0x66, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x75, 0x66, 0x66, 0x22, 0x1a, 0x0a, 0x04, 0x52, 0x65, 0x63,
	0x76, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x75, 0x66, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x62, 0x75, 0x66, 0x66, 0x22, 0x33, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x22, 0x1a, 0x0a, 0x04, 0x48, 0x69,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x06, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x22, 0x06,
	0x0a, 0x04, 0x50, 0x6f, 0x6e, 0x67, 0x22, 0x51, 0x0a, 0x05, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x09, 0x0a, 0x07, 0x47, 0x6f, 0x6f,
	0x64, 0x62, 0x79, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x22, 0x49, 0x0a, 0x0e, 0x45, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x12, 0x1d, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22,
	0x07, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x22, 0x48, 0x0a, 0x0b, 0x44, 0x65, 0x62, 0x75,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x22, 0x3c, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65,
	0x22, 0x55, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x54, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x05, 0x73, 0x75, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x73, 0x75, 0x69,
	0x74, 0x65, 0x12, 0x23, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x64, 0x0a, 0x0a, 0x54, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x64, 0x65, 0x72, 0x72, 0x12, 0x26, 0x0a, 0x05, 0x66, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x46,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x05, 0x66, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x37, 0x0a,
	0x0b, 0x54, 0x65, 0x73, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x22, 0x34, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65,
	0x54, 0x65, 0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x6c, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x22, 0x0a, 0x0a, 0x08,
	0x53, 0x61, 0x6e, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x22, 0x38, 0x0a, 0x0b, 0x4c, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x22, 0x5e, 0x0a, 0x0a, 0x4c, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x22, 0x3a, 0x0a, 0x04, 0x4d, 0x6f, 0x76, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65,
	0x77, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77,
	0x50, 0x61, 0x74, 0x68, 0x22, 0x28, 0x0a, 0x05, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1f, 0x0a,
	0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x92,
	0x01, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x7c, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x22, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x47, 0x55, 0x4c, 0x41, 0x52,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x59, 0x10,
	0x01, 0x22, 0x07, 0x0a, 0x05, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x22, 0x1b, 0x0a, 0x05, 0x54, 0x6f,
	0x61, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x1c, 0x0a, 0x08, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x22, 0x0a, 0x08, 0x41, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x4f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x09, 0x0a, 0x07, 0x52, 0x75, 0x6e,
	0x4d, 0x61, 0x69, 0x6e, 0x22, 0xb4, 0x01, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0x0a,
	0x06, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x54, 0x54,
	0x41, 0x43, 0x48, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x5f,
	0x4f, 0x52, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x02, 0x22, 0x96, 0x01, 0x0a, 0x0e,
	0x4f, 0x70, 0x65, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x2d, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41,
	0x54, 0x54, 0x41, 0x43, 0x48, 0x45, 0x44, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x02, 0x22, 0x84, 0x01, 0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x52, 0x59, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x10, 0x01,
	0x12, 0x09, 0x0a, 0x05, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x10, 0x02, 0x22, 0x88, 0x01, 0x0a, 0x0f,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x33, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x30, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e,
	0x0a, 0x0a, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x54,
	0x48, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x22, 0x60, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x1d, 0x0a, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x4c, 0x45, 0x45, 0x50, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x01, 0x22, 0x56, 0x0a, 0x08, 0x50, 0x6f, 0x72, 0x74,
	0x4f, 0x70, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x50, 0x0a, 0x0e, 0x4f, 0x54, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x6f,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x6f, 0x22, 0x3a, 0x0a, 0x0f, 0x4f, 0x54, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x54, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0xda,
	0x01, 0x0a, 0x08, 0x4f, 0x54, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73,
	0x70, 0x6f, 0x6f, 0x6b, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x73, 0x70, 0x6f, 0x6f, 0x6b, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x03, 0x6f,
	0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f,
	0x54, 0x52, 0x75, 0x6e, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x70,
	0x52, 0x03, 0x6f, 0x70, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x72, 0x63, 0x33, 0x32, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x72, 0x63, 0x33, 0x32, 0x12, 0x38, 0x0a, 0x09, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x63, 0x0a, 0x11, 0x4f,
	0x54, 0x52, 0x75, 0x6e, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x70,
	0x12, 0x14, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00,
	0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x06, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x42, 0x04, 0x0a, 0x02, 0x6f, 0x70,
	0x22, 0x94, 0x01, 0x0a, 0x08, 0x4f, 0x54, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x46, 0x69, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x0a, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x27,
	0x0a, 0x07, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x54, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x07,
	0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x73, 0x22, 0xa1, 0x01, 0x0a, 0x08, 0x4f, 0x54, 0x43, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x26, 0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3d, 0x0a, 0x0b, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x40, 0x0a, 0x0a, 0x43, 0x68,
	0x61, 0x74, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x74, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x22, 0x5a, 0x0a, 0x04,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x27, 0x0a, 0x06, 0x52, 0x6f, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x22, 0x94, 0x01, 0x0a, 0x04, 0x45, 0x78, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72,
	0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x24,
	0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x2e, 0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x03, 0x65, 0x6e, 0x76, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x1a, 0x36, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xeb, 0x02, 0x0a, 0x07, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x6f, 0x6d, 0x65,
	0x70, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68,
	0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x24, 0x0a, 0x0d,
	0x62, 0x75, 0x67, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x55, 0x52, 0x4c, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x75, 0x67, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x55,
	0x52, 0x4c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x63, 0x69, 0x65, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x22, 0x25, 0x0a, 0x0d, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x3b, 0x0a,
	0x11, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x26, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x2d, 0x0a, 0x0b, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x03, 0x70, 0x6b, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x52, 0x03, 0x70, 0x6b, 0x67, 0x22, 0x31, 0x0a, 0x0f, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x03,
	0x70, 0x6b, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x03, 0x70, 0x6b, 0x67, 0x22, 0x2e, 0x0a, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x41, 0x64, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x6b,
	0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x6b, 0x67, 0x73, 0x22, 0x31, 0x0a, 0x0d,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x20, 0x0a,
	0x04, 0x70, 0x6b, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x6b, 0x67, 0x73, 0x22,
	0x10, 0x0a, 0x0e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x22, 0x15, 0x0a, 0x13, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x70, 0x65, 0x63, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x3b, 0x0a, 0x17, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x6b, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52,
	0x04, 0x70, 0x6b, 0x67, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x61, 0x76, 0x65, 0x22, 0x42, 0x0a, 0x0e, 0x43, 0x68, 0x61,
	0x74, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x30, 0x0a, 0x0a, 0x73,
	0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x22, 0x45, 0x0a,
	0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x3a, 0x0a, 0x18, 0x70, 0x72, 0x6f, 0x6d,
	0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x46, 0x61, 0x6d, 0x69,
	0x6c, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x18, 0x70, 0x72, 0x6f, 0x6d,
	0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x46, 0x61, 0x6d, 0x69,
	0x6c, 0x69, 0x65, 0x73, 0x22, 0xf1, 0x03, 0x0a, 0x0c, 0x50, 0x70, 0x72, 0x6f, 0x66, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x55, 0x0a, 0x16, 0x70, 0x70, 0x72, 0x6f, 0x66, 0x43, 0x70,
	0x75, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x70, 0x72, 0x6f,
	0x66, 0x43, 0x70, 0x75, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x16, 0x70, 0x70, 0x72, 0x6f, 0x66, 0x43, 0x70, 0x75, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x17,
	0x70, 0x70, 0x72, 0x6f, 0x66, 0x48, 0x65, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x50, 0x70, 0x72, 0x6f, 0x66, 0x48, 0x65, 0x61, 0x70, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x17, 0x70,
	0x70, 0x72, 0x6f, 0x66, 0x48, 0x65, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5e, 0x0a, 0x19, 0x70, 0x70, 0x72, 0x6f, 0x66, 0x41,
	0x6c, 0x6c, 0x6f, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x70, 0x72, 0x6f, 0x66, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x19, 0x70, 0x70, 0x72,
	0x6f, 0x66, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5b, 0x0a, 0x18, 0x70, 0x70, 0x72, 0x6f, 0x66, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50,
	0x70, 0x72, 0x6f, 0x66, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x18, 0x70, 0x70, 0x72, 0x6f, 0x66,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x5b, 0x0a, 0x18, 0x70, 0x70, 0x72, 0x6f, 0x66, 0x4d, 0x75, 0x74, 0x65,
	0x78, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x70, 0x72, 0x6f,
	0x66, 0x4d, 0x75, 0x74, 0x65, 0x78, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x18, 0x70, 0x70, 0x72, 0x6f, 0x66, 0x4d, 0x75, 0x74,
	0x65, 0x78, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x31, 0x0a, 0x19, 0x50, 0x70, 0x72, 0x6f,
	0x66, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x22, 0x30, 0x0a, 0x18, 0x50,
	0x70, 0x72, 0x6f, 0x66, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x22, 0x32, 0x0a,
	0x16, 0x50, 0x70, 0x72, 0x6f, 0x66, 0x43, 0x70, 0x75, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x22, 0x3f, 0x0a, 0x17, 0x50, 0x70, 0x72, 0x6f, 0x66, 0x48, 0x65, 0x61, 0x70, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x67, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x67, 0x63, 0x12, 0x14, 0x0a, 0x05,
	0x64, 0x65, 0x62, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x65, 0x62,
	0x75, 0x67, 0x22, 0x30, 0x0a, 0x18, 0x50, 0x70, 0x72, 0x6f, 0x66, 0x4d, 0x75, 0x74, 0x65, 0x78,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64,
	0x65, 0x62, 0x75, 0x67, 0x22, 0x39, 0x0a, 0x0d, 0x50, 0x70, 0x72, 0x6f, 0x66, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22,
	0x27, 0x0a, 0x09, 0x50, 0x54, 0x59, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x69, 0x70, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x70, 0x69, 0x70, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x2a, 0x38, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x45,
	0x54, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x45, 0x41, 0x44, 0x10, 0x01, 0x12, 0x07, 0x0a,
	0x03, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45,
	0x10, 0x03, 0x2a, 0x21, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x10, 0x01, 0x42, 0x06, 0x5a, 0x04, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_enumTypes = make([]protoimpl.EnumInfo, 11)
var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 97)
var file_api_proto_goTypes = []interface{}{
	(FileAuthMethod)(0),               // 0: api.FileAuthMethod
	(State)(0),                        // 1: api.State
	(BootStatus_Stage)(0),             // 2: api.BootStatus.Stage
	(FileEvent_Op)(0),                 // 3: api.FileEvent.Op
	(VCREntry_Direction)(0),           // 4: api.VCREntry.Direction
	(File_Type)(0),                    // 5: api.File.Type
	(OpenChannel_Action)(0),           // 6: api.OpenChannel.Action
	(OpenChannelRes_State)(0),         // 7: api.OpenChannelRes.State
	(CloseChannel_Action)(0),          // 8: api.CloseChannel.Action
	(CloseChannelRes_Status)(0),       // 9: api.CloseChannelRes.Status
	(ContainerState_State)(0),         // 10: api.ContainerState.State
	(*Command)(nil),                   // 11: api.Command
	(*Audio)(nil),                     // 12: api.Audio
	(*Audio2)(nil),                    // 13: api.Audio2
	(*ReadMeta)(nil),                  // 14: api.ReadMeta
	(*WriteMeta)(nil),                 // 15: api.WriteMeta
	(*AppendMeta)(nil),                // 16: api.AppendMeta
	(*BootStatus)(nil),                // 17: api.BootStatus
	(*Pid1Config)(nil),                // 18: api.Pid1Config
	(*FSLock)(nil),                    // 19: api.FSLock
	(*FSSnapshot)(nil),                // 20: api.FSSnapshot
	(*SubscribeFile)(nil),             // 21: api.SubscribeFile
	(*FileEvent)(nil),                 // 22: api.FileEvent
	(*Flush)(nil),                     // 23: api.Flush
	(*OTLinkFile)(nil),                // 24: api.OTLinkFile
	(*Auth)(nil),                      // 25: api.Auth
	(*VCREntry)(nil),                  // 26: api.VCREntry
	(*StartVCR)(nil),                  // 27: api.StartVCR
	(*ReadVCR)(nil),                   // 28: api.ReadVCR
	(*VCRLog)(nil),                    // 29: api.VCRLog
	(*ExecInfo)(nil),                  // 30: api.ExecInfo
	(*Debug)(nil),                     // 31: api.Debug
	(*FileAuthReq)(nil),               // 32: api.FileAuthReq
	(*MultiFileAuthRes)(nil),          // 33: api.MultiFileAuthRes
	(*FileAuthRes)(nil),               // 34: api.FileAuthRes
	(*ListObjects)(nil),               // 35: api.ListObjects
	(*ListObjectsResp)(nil),           // 36: api.ListObjectsResp
	(*Disconnect)(nil),                // 37: api.Disconnect
	(*Send)(nil),                      // 38: api.Send
	(*Recv)(nil),                      // 39: api.Recv
	(*Connect)(nil),                   // 40: api.Connect
	(*Hint)(nil),                      // 41: api.Hint
	(*Ping)(nil),                      // 42: api.Ping
	(*Pong)(nil),                      // 43: api.Pong
	(*Hello)(nil),                     // 44: api.Hello
	(*Goodbye)(nil),                   // 45: api.Goodbye
	(*CheckChanges)(nil),              // 46: api.CheckChanges
	(*EnsurePackages)(nil),            // 47: api.EnsurePackages
	(*Start)(nil),                     // 48: api.Start
	(*DebugStatus)(nil),               // 49: api.DebugStatus
	(*StackFrame)(nil),                // 50: api.StackFrame
	(*ContainedTest)(nil),             // 51: api.ContainedTest
	(*TestResult)(nil),                // 52: api.TestResult
	(*TestFailure)(nil),               // 53: api.TestFailure
	(*ResizeTerm)(nil),                // 54: api.ResizeTerm
	(*SaneTerm)(nil),                  // 55: api.SaneTerm
	(*LintResults)(nil),               // 56: api.LintResults
	(*LintResult)(nil),                // 57: api.LintResult
	(*OK)(nil),                        // 58: api.OK
	(*Move)(nil),                      // 59: api.Move
	(*Files)(nil),                     // 60: api.Files
	(*StatResult)(nil),                // 61: api.StatResult
	(*File)(nil),                      // 62: api.File
	(*Clear)(nil),                     // 63: api.Clear
	(*Toast)(nil),                     // 64: api.Toast
	(*Redirect)(nil),                  // 65: api.Redirect
	(*AlwaysOn)(nil),                  // 66: api.AlwaysOn
	(*RunMain)(nil),                   // 67: api.RunMain
	(*OpenChannel)(nil),               // 68: api.OpenChannel
	(*OpenChannelRes)(nil),            // 69: api.OpenChannelRes
	(*CloseChannel)(nil),              // 70: api.CloseChannel
	(*CloseChannelRes)(nil),           // 71: api.CloseChannelRes
	(*ContainerState)(nil),            // 72: api.ContainerState
	(*PortOpen)(nil),                  // 73: api.PortOpen
	(*OTFetchRequest)(nil),            // 74: api.OTFetchRequest
	(*OTFetchResponse)(nil),           // 75: api.OTFetchResponse
	(*OTPacket)(nil),                  // 76: api.OTPacket
	(*OTRuneTransformOp)(nil),         // 77: api.OTRuneTransformOp
	(*OTStatus)(nil),                  // 78: api.OTStatus
	(*OTCursor)(nil),                  // 79: api.OTCursor
	(*ChatMessage)(nil),               // 80: api.ChatMessage
	(*ChatTyping)(nil),                // 81: api.ChatTyping
	(*User)(nil),                      // 82: api.User
	(*Roster)(nil),                    // 83: api.Roster
	(*Exec)(nil),                      // 84: api.Exec
	(*Package)(nil),                   // 85: api.Package
	(*PackageSearch)(nil),             // 86: api.PackageSearch
	(*PackageSearchResp)(nil),         // 87: api.PackageSearchResp
	(*PackageInfo)(nil),               // 88: api.PackageInfo
	(*PackageInfoResp)(nil),           // 89: api.PackageInfoResp
	(*PackageAdd)(nil),                // 90: api.PackageAdd
	(*PackageRemove)(nil),             // 91: api.PackageRemove
	(*PackageInstall)(nil),            // 92: api.PackageInstall
	(*PackageListSpecfile)(nil),       // 93: api.PackageListSpecfile
	(*PackageListSpecfileResp)(nil),   // 94: api.PackageListSpecfileResp
	(*PackageCacheSave)(nil),          // 95: api.PackageCacheSave
	(*ChatScrollback)(nil),            // 96: api.ChatScrollback
	(*Metrics)(nil),                   // 97: api.Metrics
	(*PprofRequest)(nil),              // 98: api.PprofRequest
	(*PprofAllocsProfileRequest)(nil), // 99: api.PprofAllocsProfileRequest
	(*PprofBlockProfileRequest)(nil),  // 100: api.PprofBlockProfileRequest
	(*PprofCpuProfileRequest)(nil),    // 101: api.PprofCpuProfileRequest
	(*PprofHeapProfileRequest)(nil),   // 102: api.PprofHeapProfileRequest
	(*PprofMutexProfileRequest)(nil),  // 103: api.PprofMutexProfileRequest
	(*PprofResponse)(nil),             // 104: api.PprofResponse
	(*PTYConfig)(nil),                 // 105: api.PTYConfig
	nil,                               // 106: api.Pid1Config.EnvEntry
	nil,                               // 107: api.Exec.EnvEntry
	(*timestamppb.Timestamp)(nil),     // 108: google.protobuf.Timestamp
}
var file_api_proto_depIdxs = []int32{
	68,  // 0: api.Command.openChan:type_name -> api.OpenChannel
	69,  // 1: api.Command.openChanRes:type_name -> api.OpenChannelRes
	70,  // 2: api.Command.closeChan:type_name -> api.CloseChannel
	71,  // 3: api.Command.closeChanRes:type_name -> api.CloseChannelRes
	72,  // 4: api.Command.containerState:type_name -> api.ContainerState
	73,  // 5: api.Command.portOpen:type_name -> api.PortOpen
	64,  // 6: api.Command.toast:type_name -> api.Toast
	65,  // 7: api.Command.redirect:type_name -> api.Redirect
	66,  // 8: api.Command.alwaysOn:type_name -> api.AlwaysOn
	67,  // 9: api.Command.runMain:type_name -> api.RunMain
	63,  // 10: api.Command.clear:type_name -> api.Clear
	55,  // 11: api.Command.saneTerm:type_name -> api.SaneTerm
	54,  // 12: api.Command.resizeTerm:type_name -> api.ResizeTerm
	1,   // 13: api.Command.state:type_name -> api.State
	58,  // 14: api.Command.ok:type_name -> api.OK
	62,  // 15: api.Command.persist:type_name -> api.File
	62,  // 16: api.Command.persistMirror:type_name -> api.File
	62,  // 17: api.Command.write:type_name -> api.File
	62,  // 18: api.Command.remove:type_name -> api.File
	59,  // 19: api.Command.move:type_name -> api.Move
	62,  // 20: api.Command.tryRemove:type_name -> api.File
	62,  // 21: api.Command.mkdir:type_name -> api.File
	62,  // 22: api.Command.stat:type_name -> api.File
	61,  // 23: api.Command.statRes:type_name -> api.StatResult
	62,  // 24: api.Command.read:type_name -> api.File
	62,  // 25: api.Command.readdir:type_name -> api.File
	60,  // 26: api.Command.files:type_name -> api.Files
	62,  // 27: api.Command.file:type_name -> api.File
	46,  // 28: api.Command.checkChanges:type_name -> api.CheckChanges
	60,  // 29: api.Command.changedFiles:type_name -> api.Files
	56,  // 30: api.Command.lintResults:type_name -> api.LintResults
	51,  // 31: api.Command.runContainedTest:type_name -> api.ContainedTest
	52,  // 32: api.Command.testResult:type_name -> api.TestResult
	67,  // 33: api.Command.debuggerStep:type_name -> api.RunMain
	49,  // 34: api.Command.debuggerStatus:type_name -> api.DebugStatus
	47,  // 35: api.Command.ensurePackages:type_name -> api.EnsurePackages
	42,  // 36: api.Command.ping:type_name -> api.Ping
	43,  // 37: api.Command.pong:type_name -> api.Pong
	44,  // 38: api.Command.hello:type_name -> api.Hello
	45,  // 39: api.Command.goodbye:type_name -> api.Goodbye
	41,  // 40: api.Command.hint:type_name -> api.Hint
	40,  // 41: api.Command.connect:type_name -> api.Connect
	38,  // 42: api.Command.send:type_name -> api.Send
	39,  // 43: api.Command.recv:type_name -> api.Recv
	37,  // 44: api.Command.disconnect:type_name -> api.Disconnect
	32,  // 45: api.Command.fileAuthReq:type_name -> api.FileAuthReq
	34,  // 46: api.Command.fileAuthRes:type_name -> api.FileAuthRes
	33,  // 47: api.Command.mutliFileAuthRes:type_name -> api.MultiFileAuthRes
	35,  // 48: api.Command.listObjects:type_name -> api.ListObjects
	36,  // 49: api.Command.listObjectsResp:type_name -> api.ListObjectsResp
	76,  // 50: api.Command.ot:type_name -> api.OTPacket
	78,  // 51: api.Command.otstatus:type_name -> api.OTStatus
	24,  // 52: api.Command.otLinkFile:type_name -> api.OTLinkFile
	79,  // 53: api.Command.otNewCursor:type_name -> api.OTCursor
	79,  // 54: api.Command.otDeleteCursor:type_name -> api.OTCursor
	74,  // 55: api.Command.otFetchRequest:type_name -> api.OTFetchRequest
	75,  // 56: api.Command.otFetchResponse:type_name -> api.OTFetchResponse
	23,  // 57: api.Command.flush:type_name -> api.Flush
	31,  // 58: api.Command.debug:type_name -> api.Debug
	27,  // 59: api.Command.startVCR:type_name -> api.StartVCR
	28,  // 60: api.Command.readVCR:type_name -> api.ReadVCR
	29,  // 61: api.Command.VCRLog:type_name -> api.VCRLog
	25,  // 62: api.Command.auth:type_name -> api.Auth
	30,  // 63: api.Command.execInfo:type_name -> api.ExecInfo
	21,  // 64: api.Command.subscribeFile:type_name -> api.SubscribeFile
	22,  // 65: api.Command.fileEvent:type_name -> api.FileEvent
	83,  // 66: api.Command.roster:type_name -> api.Roster
	82,  // 67: api.Command.join:type_name -> api.User
	82,  // 68: api.Command.part:type_name -> api.User
	84,  // 69: api.Command.exec:type_name -> api.Exec
	86,  // 70: api.Command.packageSearch:type_name -> api.PackageSearch
	87,  // 71: api.Command.packageSearchResp:type_name -> api.PackageSearchResp
	88,  // 72: api.Command.packageInfo:type_name -> api.PackageInfo
	89,  // 73: api.Command.packageInfoResp:type_name -> api.PackageInfoResp
	90,  // 74: api.Command.packageAdd:type_name -> api.PackageAdd
	91,  // 75: api.Command.packageRemove:type_name -> api.PackageRemove
	92,  // 76: api.Command.packageInstall:type_name -> api.PackageInstall
	93,  // 77: api.Command.packageListSpecfile:type_name -> api.PackageListSpecfile
	94,  // 78: api.Command.packageListSpecfileResp:type_name -> api.PackageListSpecfileResp
	95,  // 79: api.Command.packageCacheSave:type_name -> api.PackageCacheSave
	80,  // 80: api.Command.chatMessage:type_name -> api.ChatMessage
	81,  // 81: api.Command.chatTyping:type_name -> api.ChatTyping
	96,  // 82: api.Command.chatScrollback:type_name -> api.ChatScrollback
	20,  // 83: api.Command.fsSnapshot:type_name -> api.FSSnapshot
	19,  // 84: api.Command.fsTakeLock:type_name -> api.FSLock
	19,  // 85: api.Command.fsReleaseLock:type_name -> api.FSLock
	18,  // 86: api.Command.pid1Config:type_name -> api.Pid1Config
	97,  // 87: api.Command.metrics:type_name -> api.Metrics
	17,  // 88: api.Command.bootStatus:type_name -> api.BootStatus
	14,  // 89: api.Command.readMeta:type_name -> api.ReadMeta
	15,  // 90: api.Command.writeMeta:type_name -> api.WriteMeta
	16,  // 91: api.Command.appendMeta:type_name -> api.AppendMeta
	12,  // 92: api.Command.audio:type_name -> api.Audio
	98,  // 93: api.Command.pprofRequest:type_name -> api.PprofRequest
	104, // 94: api.Command.pprofResponse:type_name -> api.PprofResponse
	13,  // 95: api.Command.audio2:type_name -> api.Audio2
	105, // 96: api.Command.PTYConfig:type_name -> api.PTYConfig
	2,   // 97: api.BootStatus.stage:type_name -> api.BootStatus.Stage
	106, // 98: api.Pid1Config.env:type_name -> api.Pid1Config.EnvEntry
	62,  // 99: api.SubscribeFile.files:type_name -> api.File
	62,  // 100: api.FileEvent.file:type_name -> api.File
	62,  // 101: api.FileEvent.dest:type_name -> api.File
	3,   // 102: api.FileEvent.op:type_name -> api.FileEvent.Op
	62,  // 103: api.OTLinkFile.file:type_name -> api.File
	4,   // 104: api.VCREntry.direction:type_name -> api.VCREntry.Direction
	11,  // 105: api.VCREntry.command:type_name -> api.Command
	26,  // 106: api.VCRLog.log:type_name -> api.VCREntry
	62,  // 107: api.VCRLog.logfile:type_name -> api.File
	62,  // 108: api.FileAuthReq.file:type_name -> api.File
	0,   // 109: api.FileAuthReq.method:type_name -> api.FileAuthMethod
	34,  // 110: api.MultiFileAuthRes.put:type_name -> api.FileAuthRes
	34,  // 111: api.MultiFileAuthRes.del:type_name -> api.FileAuthRes
	34,  // 112: api.MultiFileAuthRes.get:type_name -> api.FileAuthRes
	62,  // 113: api.FileAuthRes.file:type_name -> api.File
	0,   // 114: api.FileAuthRes.method:type_name -> api.FileAuthMethod
	62,  // 115: api.EnsurePackages.file:type_name -> api.File
	50,  // 116: api.DebugStatus.stack:type_name -> api.StackFrame
	62,  // 117: api.ContainedTest.suite:type_name -> api.File
	62,  // 118: api.ContainedTest.project:type_name -> api.File
	53,  // 119: api.TestResult.fails:type_name -> api.TestFailure
	57,  // 120: api.LintResults.results:type_name -> api.LintResult
	62,  // 121: api.Files.files:type_name -> api.File
	5,   // 122: api.StatResult.type:type_name -> api.File.Type
	5,   // 123: api.File.type:type_name -> api.File.Type
	6,   // 124: api.OpenChannel.action:type_name -> api.OpenChannel.Action
	7,   // 125: api.OpenChannelRes.state:type_name -> api.OpenChannelRes.State
	8,   // 126: api.CloseChannel.action:type_name -> api.CloseChannel.Action
	9,   // 127: api.CloseChannelRes.status:type_name -> api.CloseChannelRes.Status
	10,  // 128: api.ContainerState.state:type_name -> api.ContainerState.State
	76,  // 129: api.OTFetchResponse.packets:type_name -> api.OTPacket
	77,  // 130: api.OTPacket.ops:type_name -> api.OTRuneTransformOp
	108, // 131: api.OTPacket.committed:type_name -> google.protobuf.Timestamp
	62,  // 132: api.OTStatus.linkedFile:type_name -> api.File
	79,  // 133: api.OTStatus.cursors:type_name -> api.OTCursor
	82,  // 134: api.OTCursor.user:type_name -> api.User
	82,  // 135: api.Roster.user:type_name -> api.User
	107, // 136: api.Exec.env:type_name -> api.Exec.EnvEntry
	85,  // 137: api.Package.dependencies:type_name -> api.Package
	85,  // 138: api.PackageSearchResp.results:type_name -> api.Package
	85,  // 139: api.PackageInfo.pkg:type_name -> api.Package
	85,  // 140: api.PackageInfoResp.pkg:type_name -> api.Package
	85,  // 141: api.PackageAdd.pkgs:type_name -> api.Package
	85,  // 142: api.PackageRemove.pkgs:type_name -> api.Package
	85,  // 143: api.PackageListSpecfileResp.pkgs:type_name -> api.Package
	80,  // 144: api.ChatScrollback.scrollback:type_name -> api.ChatMessage
	101, // 145: api.PprofRequest.pprofCpuProfileRequest:type_name -> api.PprofCpuProfileRequest
	102, // 146: api.PprofRequest.pprofHeapProfileRequest:type_name -> api.PprofHeapProfileRequest
	99,  // 147: api.PprofRequest.pprofAllocsProfileRequest:type_name -> api.PprofAllocsProfileRequest
	100, // 148: api.PprofRequest.pprofBlockProfileRequest:type_name -> api.PprofBlockProfileRequest
	103, // 149: api.PprofRequest.pprofMutexProfileRequest:type_name -> api.PprofMutexProfileRequest
	150, // [150:150] is the sub-list for method output_type
	150, // [150:150] is the sub-list for method input_type
	150, // [150:150] is the sub-list for extension type_name
	150, // [150:150] is the sub-list for extension extendee
	0,   // [0:150] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Audio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Audio2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pid1Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FSLock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FSSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Flush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTLinkFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Auth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VCREntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartVCR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadVCR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VCRLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Debug); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileAuthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiFileAuthRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileAuthRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjectsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Disconnect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Send); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hello); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Goodbye); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckChanges); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnsurePackages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Start); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StackFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainedTest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResizeTerm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaneTerm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LintResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LintResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Move); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Files); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Clear); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Toast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Redirect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlwaysOn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunMain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenChannelRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseChannelRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortOpen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTFetchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTFetchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTRuneTransformOp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTCursor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTyping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Roster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Exec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Package); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageSearchResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageRemove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageInstall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageListSpecfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageListSpecfileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageCacheSave); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatScrollback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PprofRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PprofAllocsProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PprofBlockProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PprofCpuProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PprofHeapProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PprofMutexProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PprofResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PTYConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Command_OpenChan)(nil),
		(*Command_OpenChanRes)(nil),
		(*Command_CloseChan)(nil),
		(*Command_CloseChanRes)(nil),
		(*Command_ContainerState)(nil),
		(*Command_PortOpen)(nil),
		(*Command_Toast)(nil),
		(*Command_Redirect)(nil),
		(*Command_AlwaysOn)(nil),
		(*Command_RunMain)(nil),
		(*Command_Clear)(nil),
		(*Command_Eval)(nil),
		(*Command_Result)(nil),
		(*Command_Input)(nil),
		(*Command_Output)(nil),
		(*Command_Error)(nil),
		(*Command_SaneTerm)(nil),
		(*Command_ResizeTerm)(nil),
		(*Command_State)(nil),
		(*Command_Ok)(nil),
		(*Command_Persist)(nil),
		(*Command_PersistMirror)(nil),
		(*Command_Write)(nil),
		(*Command_Remove)(nil),
		(*Command_Move)(nil),
		(*Command_TryRemove)(nil),
		(*Command_Mkdir)(nil),
		(*Command_Stat)(nil),
		(*Command_StatRes)(nil),
		(*Command_Read)(nil),
		(*Command_Readdir)(nil),
		(*Command_Files)(nil),
		(*Command_File)(nil),
		(*Command_CheckChanges)(nil),
		(*Command_ChangedFiles)(nil),
		(*Command_LintResults)(nil),
		(*Command_RunContainedTest)(nil),
		(*Command_TestResult)(nil),
		(*Command_DebuggerStart)(nil),
		(*Command_DebuggerStep)(nil),
		(*Command_DebuggerStatus)(nil),
		(*Command_EnsurePackages)(nil),
		(*Command_Ping)(nil),
		(*Command_Pong)(nil),
		(*Command_Hello)(nil),
		(*Command_Goodbye)(nil),
		(*Command_Hint)(nil),
		(*Command_Connect)(nil),
		(*Command_Send)(nil),
		(*Command_Recv)(nil),
		(*Command_Disconnect)(nil),
		(*Command_FileAuthReq)(nil),
		(*Command_FileAuthRes)(nil),
		(*Command_MutliFileAuthRes)(nil),
		(*Command_ListObjects)(nil),
		(*Command_ListObjectsResp)(nil),
		(*Command_Ot)(nil),
		(*Command_Otstatus)(nil),
		(*Command_OtLinkFile)(nil),
		(*Command_OtNewCursor)(nil),
		(*Command_OtDeleteCursor)(nil),
		(*Command_OtFetchRequest)(nil),
		(*Command_OtFetchResponse)(nil),
		(*Command_Flush)(nil),
		(*Command_Debug)(nil),
		(*Command_StartVCR)(nil),
		(*Command_ReadVCR)(nil),
		(*Command_VCRLog)(nil),
		(*Command_Auth)(nil),
		(*Command_ExecInfo)(nil),
		(*Command_SubscribeFile)(nil),
		(*Command_FileEvent)(nil),
		(*Command_Roster)(nil),
		(*Command_Join)(nil),
		(*Command_Part)(nil),
		(*Command_Exec)(nil),
		(*Command_PackageSearch)(nil),
		(*Command_PackageSearchResp)(nil),
		(*Command_PackageInfo)(nil),
		(*Command_PackageInfoResp)(nil),
		(*Command_PackageAdd)(nil),
		(*Command_PackageRemove)(nil),
		(*Command_PackageInstall)(nil),
		(*Command_PackageListSpecfile)(nil),
		(*Command_PackageListSpecfileResp)(nil),
		(*Command_PackageCacheSave)(nil),
		(*Command_ChatMessage)(nil),
		(*Command_ChatTyping)(nil),
		(*Command_ChatScrollback)(nil),
		(*Command_FsSnapshot)(nil),
		(*Command_FsTakeLock)(nil),
		(*Command_FsReleaseLock)(nil),
		(*Command_HasCap)(nil),
		(*Command_Pid1Config)(nil),
		(*Command_Metrics)(nil),
		(*Command_BootStatus)(nil),
		(*Command_ReadMeta)(nil),
		(*Command_WriteMeta)(nil),
		(*Command_AppendMeta)(nil),
		(*Command_Audio)(nil),
		(*Command_PprofRequest)(nil),
		(*Command_PprofResponse)(nil),
		(*Command_Audio2)(nil),
		(*Command_PTYConfig)(nil),
	}
	file_api_proto_msgTypes[66].OneofWrappers = []interface{}{
		(*OTRuneTransformOp_Skip)(nil),
		(*OTRuneTransformOp_Delete)(nil),
		(*OTRuneTransformOp_Insert)(nil),
	}
	file_api_proto_msgTypes[87].OneofWrappers = []interface{}{
		(*PprofRequest_PprofCpuProfileRequest)(nil),
		(*PprofRequest_PprofHeapProfileRequest)(nil),
		(*PprofRequest_PprofAllocsProfileRequest)(nil),
		(*PprofRequest_PprofBlockProfileRequest)(nil),
		(*PprofRequest_PprofMutexProfileRequest)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      11,
			NumMessages:   97,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		EnumInfos:         file_api_proto_enumTypes,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}
